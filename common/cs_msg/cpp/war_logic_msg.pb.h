// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: war_logic_msg.proto

#ifndef PROTOBUF_war_5flogic_5fmsg_2eproto__INCLUDED
#define PROTOBUF_war_5flogic_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "base_msg_struct.pb.h"
#include "error_code.pb.h"
// @@protoc_insertion_point(includes)

namespace net {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_war_5flogic_5fmsg_2eproto();
void protobuf_AssignDesc_war_5flogic_5fmsg_2eproto();
void protobuf_ShutdownFile_war_5flogic_5fmsg_2eproto();

class msg_war_game_info_free_rep;
class msg_war_game_info_play_rep;
class msg_war_start_rep;
class msg_war_place_jetton_req;
class msg_war_place_jetton_rep;
class msg_war_place_jetton_broadcast;
class msg_war_game_end;
class msg_war_change_user_score;
class war_play_log;
class msg_war_play_log_rep;

// ===================================================================

class msg_war_game_info_free_rep : public ::google::protobuf::Message {
 public:
  msg_war_game_info_free_rep();
  virtual ~msg_war_game_info_free_rep();

  msg_war_game_info_free_rep(const msg_war_game_info_free_rep& from);

  inline msg_war_game_info_free_rep& operator=(const msg_war_game_info_free_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_war_game_info_free_rep& default_instance();

  void Swap(msg_war_game_info_free_rep* other);

  // implements Message ----------------------------------------------

  msg_war_game_info_free_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_war_game_info_free_rep& from);
  void MergeFrom(const msg_war_game_info_free_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 time_leave = 1;
  inline bool has_time_leave() const;
  inline void clear_time_leave();
  static const int kTimeLeaveFieldNumber = 1;
  inline ::google::protobuf::uint32 time_leave() const;
  inline void set_time_leave(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_war_game_info_free_rep)
 private:
  inline void set_has_time_leave();
  inline void clear_has_time_leave();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 time_leave_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_war_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_war_game_info_free_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_war_game_info_play_rep : public ::google::protobuf::Message {
 public:
  msg_war_game_info_play_rep();
  virtual ~msg_war_game_info_play_rep();

  msg_war_game_info_play_rep(const msg_war_game_info_play_rep& from);

  inline msg_war_game_info_play_rep& operator=(const msg_war_game_info_play_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_war_game_info_play_rep& default_instance();

  void Swap(msg_war_game_info_play_rep* other);

  // implements Message ----------------------------------------------

  msg_war_game_info_play_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_war_game_info_play_rep& from);
  void MergeFrom(const msg_war_game_info_play_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 all_jetton_score = 1;
  inline int all_jetton_score_size() const;
  inline void clear_all_jetton_score();
  static const int kAllJettonScoreFieldNumber = 1;
  inline ::google::protobuf::int64 all_jetton_score(int index) const;
  inline void set_all_jetton_score(int index, ::google::protobuf::int64 value);
  inline void add_all_jetton_score(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      all_jetton_score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_all_jetton_score();

  // repeated .net.msg_cards table_cards = 2;
  inline int table_cards_size() const;
  inline void clear_table_cards();
  static const int kTableCardsFieldNumber = 2;
  inline const ::net::msg_cards& table_cards(int index) const;
  inline ::net::msg_cards* mutable_table_cards(int index);
  inline ::net::msg_cards* add_table_cards();
  inline const ::google::protobuf::RepeatedPtrField< ::net::msg_cards >&
      table_cards() const;
  inline ::google::protobuf::RepeatedPtrField< ::net::msg_cards >*
      mutable_table_cards();

  // repeated uint32 card_types = 3;
  inline int card_types_size() const;
  inline void clear_card_types();
  static const int kCardTypesFieldNumber = 3;
  inline ::google::protobuf::uint32 card_types(int index) const;
  inline void set_card_types(int index, ::google::protobuf::uint32 value);
  inline void add_card_types(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_types() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_types();

  // optional uint32 time_leave = 4;
  inline bool has_time_leave() const;
  inline void clear_time_leave();
  static const int kTimeLeaveFieldNumber = 4;
  inline ::google::protobuf::uint32 time_leave() const;
  inline void set_time_leave(::google::protobuf::uint32 value);

  // optional uint32 game_status = 5;
  inline bool has_game_status() const;
  inline void clear_game_status();
  static const int kGameStatusFieldNumber = 5;
  inline ::google::protobuf::uint32 game_status() const;
  inline void set_game_status(::google::protobuf::uint32 value);

  // repeated int64 self_jetton_score = 6;
  inline int self_jetton_score_size() const;
  inline void clear_self_jetton_score();
  static const int kSelfJettonScoreFieldNumber = 6;
  inline ::google::protobuf::int64 self_jetton_score(int index) const;
  inline void set_self_jetton_score(int index, ::google::protobuf::int64 value);
  inline void add_self_jetton_score(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      self_jetton_score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_self_jetton_score();

  // @@protoc_insertion_point(class_scope:net.msg_war_game_info_play_rep)
 private:
  inline void set_has_time_leave();
  inline void clear_has_time_leave();
  inline void set_has_game_status();
  inline void clear_has_game_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > all_jetton_score_;
  ::google::protobuf::RepeatedPtrField< ::net::msg_cards > table_cards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_types_;
  ::google::protobuf::uint32 time_leave_;
  ::google::protobuf::uint32 game_status_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > self_jetton_score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_war_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_war_game_info_play_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_war_start_rep : public ::google::protobuf::Message {
 public:
  msg_war_start_rep();
  virtual ~msg_war_start_rep();

  msg_war_start_rep(const msg_war_start_rep& from);

  inline msg_war_start_rep& operator=(const msg_war_start_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_war_start_rep& default_instance();

  void Swap(msg_war_start_rep* other);

  // implements Message ----------------------------------------------

  msg_war_start_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_war_start_rep& from);
  void MergeFrom(const msg_war_start_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 time_leave = 1;
  inline bool has_time_leave() const;
  inline void clear_time_leave();
  static const int kTimeLeaveFieldNumber = 1;
  inline ::google::protobuf::uint32 time_leave() const;
  inline void set_time_leave(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_war_start_rep)
 private:
  inline void set_has_time_leave();
  inline void clear_has_time_leave();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 time_leave_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_war_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_war_start_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_war_place_jetton_req : public ::google::protobuf::Message {
 public:
  msg_war_place_jetton_req();
  virtual ~msg_war_place_jetton_req();

  msg_war_place_jetton_req(const msg_war_place_jetton_req& from);

  inline msg_war_place_jetton_req& operator=(const msg_war_place_jetton_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_war_place_jetton_req& default_instance();

  void Swap(msg_war_place_jetton_req* other);

  // implements Message ----------------------------------------------

  msg_war_place_jetton_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_war_place_jetton_req& from);
  void MergeFrom(const msg_war_place_jetton_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 jetton_area = 1;
  inline bool has_jetton_area() const;
  inline void clear_jetton_area();
  static const int kJettonAreaFieldNumber = 1;
  inline ::google::protobuf::uint32 jetton_area() const;
  inline void set_jetton_area(::google::protobuf::uint32 value);

  // optional int64 jetton_score = 2;
  inline bool has_jetton_score() const;
  inline void clear_jetton_score();
  static const int kJettonScoreFieldNumber = 2;
  inline ::google::protobuf::int64 jetton_score() const;
  inline void set_jetton_score(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:net.msg_war_place_jetton_req)
 private:
  inline void set_has_jetton_area();
  inline void clear_has_jetton_area();
  inline void set_has_jetton_score();
  inline void clear_has_jetton_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 jetton_score_;
  ::google::protobuf::uint32 jetton_area_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_war_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_war_place_jetton_req* default_instance_;
};
// -------------------------------------------------------------------

class msg_war_place_jetton_rep : public ::google::protobuf::Message {
 public:
  msg_war_place_jetton_rep();
  virtual ~msg_war_place_jetton_rep();

  msg_war_place_jetton_rep(const msg_war_place_jetton_rep& from);

  inline msg_war_place_jetton_rep& operator=(const msg_war_place_jetton_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_war_place_jetton_rep& default_instance();

  void Swap(msg_war_place_jetton_rep* other);

  // implements Message ----------------------------------------------

  msg_war_place_jetton_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_war_place_jetton_rep& from);
  void MergeFrom(const msg_war_place_jetton_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 jetton_area = 1;
  inline bool has_jetton_area() const;
  inline void clear_jetton_area();
  static const int kJettonAreaFieldNumber = 1;
  inline ::google::protobuf::uint32 jetton_area() const;
  inline void set_jetton_area(::google::protobuf::uint32 value);

  // optional int64 jetton_score = 2;
  inline bool has_jetton_score() const;
  inline void clear_jetton_score();
  static const int kJettonScoreFieldNumber = 2;
  inline ::google::protobuf::int64 jetton_score() const;
  inline void set_jetton_score(::google::protobuf::int64 value);

  // optional uint32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_war_place_jetton_rep)
 private:
  inline void set_has_jetton_area();
  inline void clear_has_jetton_area();
  inline void set_has_jetton_score();
  inline void clear_has_jetton_score();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 jetton_score_;
  ::google::protobuf::uint32 jetton_area_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_war_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_war_place_jetton_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_war_place_jetton_broadcast : public ::google::protobuf::Message {
 public:
  msg_war_place_jetton_broadcast();
  virtual ~msg_war_place_jetton_broadcast();

  msg_war_place_jetton_broadcast(const msg_war_place_jetton_broadcast& from);

  inline msg_war_place_jetton_broadcast& operator=(const msg_war_place_jetton_broadcast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_war_place_jetton_broadcast& default_instance();

  void Swap(msg_war_place_jetton_broadcast* other);

  // implements Message ----------------------------------------------

  msg_war_place_jetton_broadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_war_place_jetton_broadcast& from);
  void MergeFrom(const msg_war_place_jetton_broadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional uint32 jetton_area = 2;
  inline bool has_jetton_area() const;
  inline void clear_jetton_area();
  static const int kJettonAreaFieldNumber = 2;
  inline ::google::protobuf::uint32 jetton_area() const;
  inline void set_jetton_area(::google::protobuf::uint32 value);

  // optional int64 jetton_score = 3;
  inline bool has_jetton_score() const;
  inline void clear_jetton_score();
  static const int kJettonScoreFieldNumber = 3;
  inline ::google::protobuf::int64 jetton_score() const;
  inline void set_jetton_score(::google::protobuf::int64 value);

  // optional int64 total_jetton_score = 4;
  inline bool has_total_jetton_score() const;
  inline void clear_total_jetton_score();
  static const int kTotalJettonScoreFieldNumber = 4;
  inline ::google::protobuf::int64 total_jetton_score() const;
  inline void set_total_jetton_score(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:net.msg_war_place_jetton_broadcast)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_jetton_area();
  inline void clear_has_jetton_area();
  inline void set_has_jetton_score();
  inline void clear_has_jetton_score();
  inline void set_has_total_jetton_score();
  inline void clear_has_total_jetton_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 jetton_area_;
  ::google::protobuf::int64 jetton_score_;
  ::google::protobuf::int64 total_jetton_score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_war_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_war_place_jetton_broadcast* default_instance_;
};
// -------------------------------------------------------------------

class msg_war_game_end : public ::google::protobuf::Message {
 public:
  msg_war_game_end();
  virtual ~msg_war_game_end();

  msg_war_game_end(const msg_war_game_end& from);

  inline msg_war_game_end& operator=(const msg_war_game_end& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_war_game_end& default_instance();

  void Swap(msg_war_game_end* other);

  // implements Message ----------------------------------------------

  msg_war_game_end* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_war_game_end& from);
  void MergeFrom(const msg_war_game_end& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 time_leave = 1;
  inline bool has_time_leave() const;
  inline void clear_time_leave();
  static const int kTimeLeaveFieldNumber = 1;
  inline ::google::protobuf::uint32 time_leave() const;
  inline void set_time_leave(::google::protobuf::uint32 value);

  // repeated .net.msg_cards table_cards = 2;
  inline int table_cards_size() const;
  inline void clear_table_cards();
  static const int kTableCardsFieldNumber = 2;
  inline const ::net::msg_cards& table_cards(int index) const;
  inline ::net::msg_cards* mutable_table_cards(int index);
  inline ::net::msg_cards* add_table_cards();
  inline const ::google::protobuf::RepeatedPtrField< ::net::msg_cards >&
      table_cards() const;
  inline ::google::protobuf::RepeatedPtrField< ::net::msg_cards >*
      mutable_table_cards();

  // repeated uint32 card_types = 3;
  inline int card_types_size() const;
  inline void clear_card_types();
  static const int kCardTypesFieldNumber = 3;
  inline ::google::protobuf::uint32 card_types(int index) const;
  inline void set_card_types(int index, ::google::protobuf::uint32 value);
  inline void add_card_types(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_types() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_types();

  // optional int64 user_score = 4;
  inline bool has_user_score() const;
  inline void clear_user_score();
  static const int kUserScoreFieldNumber = 4;
  inline ::google::protobuf::int64 user_score() const;
  inline void set_user_score(::google::protobuf::int64 value);

  // repeated int64 player_score = 5;
  inline int player_score_size() const;
  inline void clear_player_score();
  static const int kPlayerScoreFieldNumber = 5;
  inline ::google::protobuf::int64 player_score(int index) const;
  inline void set_player_score(int index, ::google::protobuf::int64 value);
  inline void add_player_score(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      player_score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_player_score();

  // repeated int32 win_multiple = 6;
  inline int win_multiple_size() const;
  inline void clear_win_multiple();
  static const int kWinMultipleFieldNumber = 6;
  inline ::google::protobuf::int32 win_multiple(int index) const;
  inline void set_win_multiple(int index, ::google::protobuf::int32 value);
  inline void add_win_multiple(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      win_multiple() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_win_multiple();

  // repeated int32 win_index = 7;
  inline int win_index_size() const;
  inline void clear_win_index();
  static const int kWinIndexFieldNumber = 7;
  inline ::google::protobuf::int32 win_index(int index) const;
  inline void set_win_index(int index, ::google::protobuf::int32 value);
  inline void add_win_index(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      win_index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_win_index();

  // @@protoc_insertion_point(class_scope:net.msg_war_game_end)
 private:
  inline void set_has_time_leave();
  inline void clear_has_time_leave();
  inline void set_has_user_score();
  inline void clear_has_user_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::net::msg_cards > table_cards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_types_;
  ::google::protobuf::int64 user_score_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > player_score_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > win_multiple_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > win_index_;
  ::google::protobuf::uint32 time_leave_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_war_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_war_game_end* default_instance_;
};
// -------------------------------------------------------------------

class msg_war_change_user_score : public ::google::protobuf::Message {
 public:
  msg_war_change_user_score();
  virtual ~msg_war_change_user_score();

  msg_war_change_user_score(const msg_war_change_user_score& from);

  inline msg_war_change_user_score& operator=(const msg_war_change_user_score& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_war_change_user_score& default_instance();

  void Swap(msg_war_change_user_score* other);

  // implements Message ----------------------------------------------

  msg_war_change_user_score* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_war_change_user_score& from);
  void MergeFrom(const msg_war_change_user_score& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chair_id = 1;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // optional int64 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int64 score() const;
  inline void set_score(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:net.msg_war_change_user_score)
 private:
  inline void set_has_chair_id();
  inline void clear_has_chair_id();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 score_;
  ::google::protobuf::uint32 chair_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_war_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_war_change_user_score* default_instance_;
};
// -------------------------------------------------------------------

class war_play_log : public ::google::protobuf::Message {
 public:
  war_play_log();
  virtual ~war_play_log();

  war_play_log(const war_play_log& from);

  inline war_play_log& operator=(const war_play_log& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const war_play_log& default_instance();

  void Swap(war_play_log* other);

  // implements Message ----------------------------------------------

  war_play_log* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const war_play_log& from);
  void MergeFrom(const war_play_log& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 seats_win = 1;
  inline int seats_win_size() const;
  inline void clear_seats_win();
  static const int kSeatsWinFieldNumber = 1;
  inline ::google::protobuf::uint32 seats_win(int index) const;
  inline void set_seats_win(int index, ::google::protobuf::uint32 value);
  inline void add_seats_win(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      seats_win() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_seats_win();

  // optional uint32 card = 2;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 2;
  inline ::google::protobuf::uint32 card() const;
  inline void set_card(::google::protobuf::uint32 value);

  // optional uint32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.war_play_log)
 private:
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > seats_win_;
  ::google::protobuf::uint32 card_;
  ::google::protobuf::uint32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_war_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static war_play_log* default_instance_;
};
// -------------------------------------------------------------------

class msg_war_play_log_rep : public ::google::protobuf::Message {
 public:
  msg_war_play_log_rep();
  virtual ~msg_war_play_log_rep();

  msg_war_play_log_rep(const msg_war_play_log_rep& from);

  inline msg_war_play_log_rep& operator=(const msg_war_play_log_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_war_play_log_rep& default_instance();

  void Swap(msg_war_play_log_rep* other);

  // implements Message ----------------------------------------------

  msg_war_play_log_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_war_play_log_rep& from);
  void MergeFrom(const msg_war_play_log_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .net.war_play_log logs = 1;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 1;
  inline const ::net::war_play_log& logs(int index) const;
  inline ::net::war_play_log* mutable_logs(int index);
  inline ::net::war_play_log* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::net::war_play_log >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::net::war_play_log >*
      mutable_logs();

  // @@protoc_insertion_point(class_scope:net.msg_war_play_log_rep)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::net::war_play_log > logs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_war_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_war_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_war_play_log_rep* default_instance_;
};
// ===================================================================


// ===================================================================

// msg_war_game_info_free_rep

// optional uint32 time_leave = 1;
inline bool msg_war_game_info_free_rep::has_time_leave() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_war_game_info_free_rep::set_has_time_leave() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_war_game_info_free_rep::clear_has_time_leave() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_war_game_info_free_rep::clear_time_leave() {
  time_leave_ = 0u;
  clear_has_time_leave();
}
inline ::google::protobuf::uint32 msg_war_game_info_free_rep::time_leave() const {
  return time_leave_;
}
inline void msg_war_game_info_free_rep::set_time_leave(::google::protobuf::uint32 value) {
  set_has_time_leave();
  time_leave_ = value;
}

// -------------------------------------------------------------------

// msg_war_game_info_play_rep

// repeated int64 all_jetton_score = 1;
inline int msg_war_game_info_play_rep::all_jetton_score_size() const {
  return all_jetton_score_.size();
}
inline void msg_war_game_info_play_rep::clear_all_jetton_score() {
  all_jetton_score_.Clear();
}
inline ::google::protobuf::int64 msg_war_game_info_play_rep::all_jetton_score(int index) const {
  return all_jetton_score_.Get(index);
}
inline void msg_war_game_info_play_rep::set_all_jetton_score(int index, ::google::protobuf::int64 value) {
  all_jetton_score_.Set(index, value);
}
inline void msg_war_game_info_play_rep::add_all_jetton_score(::google::protobuf::int64 value) {
  all_jetton_score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
msg_war_game_info_play_rep::all_jetton_score() const {
  return all_jetton_score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
msg_war_game_info_play_rep::mutable_all_jetton_score() {
  return &all_jetton_score_;
}

// repeated .net.msg_cards table_cards = 2;
inline int msg_war_game_info_play_rep::table_cards_size() const {
  return table_cards_.size();
}
inline void msg_war_game_info_play_rep::clear_table_cards() {
  table_cards_.Clear();
}
inline const ::net::msg_cards& msg_war_game_info_play_rep::table_cards(int index) const {
  return table_cards_.Get(index);
}
inline ::net::msg_cards* msg_war_game_info_play_rep::mutable_table_cards(int index) {
  return table_cards_.Mutable(index);
}
inline ::net::msg_cards* msg_war_game_info_play_rep::add_table_cards() {
  return table_cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::net::msg_cards >&
msg_war_game_info_play_rep::table_cards() const {
  return table_cards_;
}
inline ::google::protobuf::RepeatedPtrField< ::net::msg_cards >*
msg_war_game_info_play_rep::mutable_table_cards() {
  return &table_cards_;
}

// repeated uint32 card_types = 3;
inline int msg_war_game_info_play_rep::card_types_size() const {
  return card_types_.size();
}
inline void msg_war_game_info_play_rep::clear_card_types() {
  card_types_.Clear();
}
inline ::google::protobuf::uint32 msg_war_game_info_play_rep::card_types(int index) const {
  return card_types_.Get(index);
}
inline void msg_war_game_info_play_rep::set_card_types(int index, ::google::protobuf::uint32 value) {
  card_types_.Set(index, value);
}
inline void msg_war_game_info_play_rep::add_card_types(::google::protobuf::uint32 value) {
  card_types_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_war_game_info_play_rep::card_types() const {
  return card_types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_war_game_info_play_rep::mutable_card_types() {
  return &card_types_;
}

// optional uint32 time_leave = 4;
inline bool msg_war_game_info_play_rep::has_time_leave() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_war_game_info_play_rep::set_has_time_leave() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_war_game_info_play_rep::clear_has_time_leave() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_war_game_info_play_rep::clear_time_leave() {
  time_leave_ = 0u;
  clear_has_time_leave();
}
inline ::google::protobuf::uint32 msg_war_game_info_play_rep::time_leave() const {
  return time_leave_;
}
inline void msg_war_game_info_play_rep::set_time_leave(::google::protobuf::uint32 value) {
  set_has_time_leave();
  time_leave_ = value;
}

// optional uint32 game_status = 5;
inline bool msg_war_game_info_play_rep::has_game_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msg_war_game_info_play_rep::set_has_game_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msg_war_game_info_play_rep::clear_has_game_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msg_war_game_info_play_rep::clear_game_status() {
  game_status_ = 0u;
  clear_has_game_status();
}
inline ::google::protobuf::uint32 msg_war_game_info_play_rep::game_status() const {
  return game_status_;
}
inline void msg_war_game_info_play_rep::set_game_status(::google::protobuf::uint32 value) {
  set_has_game_status();
  game_status_ = value;
}

// repeated int64 self_jetton_score = 6;
inline int msg_war_game_info_play_rep::self_jetton_score_size() const {
  return self_jetton_score_.size();
}
inline void msg_war_game_info_play_rep::clear_self_jetton_score() {
  self_jetton_score_.Clear();
}
inline ::google::protobuf::int64 msg_war_game_info_play_rep::self_jetton_score(int index) const {
  return self_jetton_score_.Get(index);
}
inline void msg_war_game_info_play_rep::set_self_jetton_score(int index, ::google::protobuf::int64 value) {
  self_jetton_score_.Set(index, value);
}
inline void msg_war_game_info_play_rep::add_self_jetton_score(::google::protobuf::int64 value) {
  self_jetton_score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
msg_war_game_info_play_rep::self_jetton_score() const {
  return self_jetton_score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
msg_war_game_info_play_rep::mutable_self_jetton_score() {
  return &self_jetton_score_;
}

// -------------------------------------------------------------------

// msg_war_start_rep

// optional uint32 time_leave = 1;
inline bool msg_war_start_rep::has_time_leave() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_war_start_rep::set_has_time_leave() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_war_start_rep::clear_has_time_leave() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_war_start_rep::clear_time_leave() {
  time_leave_ = 0u;
  clear_has_time_leave();
}
inline ::google::protobuf::uint32 msg_war_start_rep::time_leave() const {
  return time_leave_;
}
inline void msg_war_start_rep::set_time_leave(::google::protobuf::uint32 value) {
  set_has_time_leave();
  time_leave_ = value;
}

// -------------------------------------------------------------------

// msg_war_place_jetton_req

// optional uint32 jetton_area = 1;
inline bool msg_war_place_jetton_req::has_jetton_area() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_war_place_jetton_req::set_has_jetton_area() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_war_place_jetton_req::clear_has_jetton_area() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_war_place_jetton_req::clear_jetton_area() {
  jetton_area_ = 0u;
  clear_has_jetton_area();
}
inline ::google::protobuf::uint32 msg_war_place_jetton_req::jetton_area() const {
  return jetton_area_;
}
inline void msg_war_place_jetton_req::set_jetton_area(::google::protobuf::uint32 value) {
  set_has_jetton_area();
  jetton_area_ = value;
}

// optional int64 jetton_score = 2;
inline bool msg_war_place_jetton_req::has_jetton_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_war_place_jetton_req::set_has_jetton_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_war_place_jetton_req::clear_has_jetton_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_war_place_jetton_req::clear_jetton_score() {
  jetton_score_ = GOOGLE_LONGLONG(0);
  clear_has_jetton_score();
}
inline ::google::protobuf::int64 msg_war_place_jetton_req::jetton_score() const {
  return jetton_score_;
}
inline void msg_war_place_jetton_req::set_jetton_score(::google::protobuf::int64 value) {
  set_has_jetton_score();
  jetton_score_ = value;
}

// -------------------------------------------------------------------

// msg_war_place_jetton_rep

// optional uint32 jetton_area = 1;
inline bool msg_war_place_jetton_rep::has_jetton_area() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_war_place_jetton_rep::set_has_jetton_area() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_war_place_jetton_rep::clear_has_jetton_area() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_war_place_jetton_rep::clear_jetton_area() {
  jetton_area_ = 0u;
  clear_has_jetton_area();
}
inline ::google::protobuf::uint32 msg_war_place_jetton_rep::jetton_area() const {
  return jetton_area_;
}
inline void msg_war_place_jetton_rep::set_jetton_area(::google::protobuf::uint32 value) {
  set_has_jetton_area();
  jetton_area_ = value;
}

// optional int64 jetton_score = 2;
inline bool msg_war_place_jetton_rep::has_jetton_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_war_place_jetton_rep::set_has_jetton_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_war_place_jetton_rep::clear_has_jetton_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_war_place_jetton_rep::clear_jetton_score() {
  jetton_score_ = GOOGLE_LONGLONG(0);
  clear_has_jetton_score();
}
inline ::google::protobuf::int64 msg_war_place_jetton_rep::jetton_score() const {
  return jetton_score_;
}
inline void msg_war_place_jetton_rep::set_jetton_score(::google::protobuf::int64 value) {
  set_has_jetton_score();
  jetton_score_ = value;
}

// optional uint32 result = 3;
inline bool msg_war_place_jetton_rep::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_war_place_jetton_rep::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_war_place_jetton_rep::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_war_place_jetton_rep::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 msg_war_place_jetton_rep::result() const {
  return result_;
}
inline void msg_war_place_jetton_rep::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// msg_war_place_jetton_broadcast

// optional uint32 uid = 1;
inline bool msg_war_place_jetton_broadcast::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_war_place_jetton_broadcast::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_war_place_jetton_broadcast::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_war_place_jetton_broadcast::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 msg_war_place_jetton_broadcast::uid() const {
  return uid_;
}
inline void msg_war_place_jetton_broadcast::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 jetton_area = 2;
inline bool msg_war_place_jetton_broadcast::has_jetton_area() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_war_place_jetton_broadcast::set_has_jetton_area() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_war_place_jetton_broadcast::clear_has_jetton_area() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_war_place_jetton_broadcast::clear_jetton_area() {
  jetton_area_ = 0u;
  clear_has_jetton_area();
}
inline ::google::protobuf::uint32 msg_war_place_jetton_broadcast::jetton_area() const {
  return jetton_area_;
}
inline void msg_war_place_jetton_broadcast::set_jetton_area(::google::protobuf::uint32 value) {
  set_has_jetton_area();
  jetton_area_ = value;
}

// optional int64 jetton_score = 3;
inline bool msg_war_place_jetton_broadcast::has_jetton_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_war_place_jetton_broadcast::set_has_jetton_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_war_place_jetton_broadcast::clear_has_jetton_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_war_place_jetton_broadcast::clear_jetton_score() {
  jetton_score_ = GOOGLE_LONGLONG(0);
  clear_has_jetton_score();
}
inline ::google::protobuf::int64 msg_war_place_jetton_broadcast::jetton_score() const {
  return jetton_score_;
}
inline void msg_war_place_jetton_broadcast::set_jetton_score(::google::protobuf::int64 value) {
  set_has_jetton_score();
  jetton_score_ = value;
}

// optional int64 total_jetton_score = 4;
inline bool msg_war_place_jetton_broadcast::has_total_jetton_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_war_place_jetton_broadcast::set_has_total_jetton_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_war_place_jetton_broadcast::clear_has_total_jetton_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_war_place_jetton_broadcast::clear_total_jetton_score() {
  total_jetton_score_ = GOOGLE_LONGLONG(0);
  clear_has_total_jetton_score();
}
inline ::google::protobuf::int64 msg_war_place_jetton_broadcast::total_jetton_score() const {
  return total_jetton_score_;
}
inline void msg_war_place_jetton_broadcast::set_total_jetton_score(::google::protobuf::int64 value) {
  set_has_total_jetton_score();
  total_jetton_score_ = value;
}

// -------------------------------------------------------------------

// msg_war_game_end

// optional uint32 time_leave = 1;
inline bool msg_war_game_end::has_time_leave() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_war_game_end::set_has_time_leave() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_war_game_end::clear_has_time_leave() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_war_game_end::clear_time_leave() {
  time_leave_ = 0u;
  clear_has_time_leave();
}
inline ::google::protobuf::uint32 msg_war_game_end::time_leave() const {
  return time_leave_;
}
inline void msg_war_game_end::set_time_leave(::google::protobuf::uint32 value) {
  set_has_time_leave();
  time_leave_ = value;
}

// repeated .net.msg_cards table_cards = 2;
inline int msg_war_game_end::table_cards_size() const {
  return table_cards_.size();
}
inline void msg_war_game_end::clear_table_cards() {
  table_cards_.Clear();
}
inline const ::net::msg_cards& msg_war_game_end::table_cards(int index) const {
  return table_cards_.Get(index);
}
inline ::net::msg_cards* msg_war_game_end::mutable_table_cards(int index) {
  return table_cards_.Mutable(index);
}
inline ::net::msg_cards* msg_war_game_end::add_table_cards() {
  return table_cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::net::msg_cards >&
msg_war_game_end::table_cards() const {
  return table_cards_;
}
inline ::google::protobuf::RepeatedPtrField< ::net::msg_cards >*
msg_war_game_end::mutable_table_cards() {
  return &table_cards_;
}

// repeated uint32 card_types = 3;
inline int msg_war_game_end::card_types_size() const {
  return card_types_.size();
}
inline void msg_war_game_end::clear_card_types() {
  card_types_.Clear();
}
inline ::google::protobuf::uint32 msg_war_game_end::card_types(int index) const {
  return card_types_.Get(index);
}
inline void msg_war_game_end::set_card_types(int index, ::google::protobuf::uint32 value) {
  card_types_.Set(index, value);
}
inline void msg_war_game_end::add_card_types(::google::protobuf::uint32 value) {
  card_types_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_war_game_end::card_types() const {
  return card_types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_war_game_end::mutable_card_types() {
  return &card_types_;
}

// optional int64 user_score = 4;
inline bool msg_war_game_end::has_user_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_war_game_end::set_has_user_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_war_game_end::clear_has_user_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_war_game_end::clear_user_score() {
  user_score_ = GOOGLE_LONGLONG(0);
  clear_has_user_score();
}
inline ::google::protobuf::int64 msg_war_game_end::user_score() const {
  return user_score_;
}
inline void msg_war_game_end::set_user_score(::google::protobuf::int64 value) {
  set_has_user_score();
  user_score_ = value;
}

// repeated int64 player_score = 5;
inline int msg_war_game_end::player_score_size() const {
  return player_score_.size();
}
inline void msg_war_game_end::clear_player_score() {
  player_score_.Clear();
}
inline ::google::protobuf::int64 msg_war_game_end::player_score(int index) const {
  return player_score_.Get(index);
}
inline void msg_war_game_end::set_player_score(int index, ::google::protobuf::int64 value) {
  player_score_.Set(index, value);
}
inline void msg_war_game_end::add_player_score(::google::protobuf::int64 value) {
  player_score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
msg_war_game_end::player_score() const {
  return player_score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
msg_war_game_end::mutable_player_score() {
  return &player_score_;
}

// repeated int32 win_multiple = 6;
inline int msg_war_game_end::win_multiple_size() const {
  return win_multiple_.size();
}
inline void msg_war_game_end::clear_win_multiple() {
  win_multiple_.Clear();
}
inline ::google::protobuf::int32 msg_war_game_end::win_multiple(int index) const {
  return win_multiple_.Get(index);
}
inline void msg_war_game_end::set_win_multiple(int index, ::google::protobuf::int32 value) {
  win_multiple_.Set(index, value);
}
inline void msg_war_game_end::add_win_multiple(::google::protobuf::int32 value) {
  win_multiple_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_war_game_end::win_multiple() const {
  return win_multiple_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_war_game_end::mutable_win_multiple() {
  return &win_multiple_;
}

// repeated int32 win_index = 7;
inline int msg_war_game_end::win_index_size() const {
  return win_index_.size();
}
inline void msg_war_game_end::clear_win_index() {
  win_index_.Clear();
}
inline ::google::protobuf::int32 msg_war_game_end::win_index(int index) const {
  return win_index_.Get(index);
}
inline void msg_war_game_end::set_win_index(int index, ::google::protobuf::int32 value) {
  win_index_.Set(index, value);
}
inline void msg_war_game_end::add_win_index(::google::protobuf::int32 value) {
  win_index_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_war_game_end::win_index() const {
  return win_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_war_game_end::mutable_win_index() {
  return &win_index_;
}

// -------------------------------------------------------------------

// msg_war_change_user_score

// optional uint32 chair_id = 1;
inline bool msg_war_change_user_score::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_war_change_user_score::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_war_change_user_score::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_war_change_user_score::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 msg_war_change_user_score::chair_id() const {
  return chair_id_;
}
inline void msg_war_change_user_score::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// optional int64 score = 2;
inline bool msg_war_change_user_score::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_war_change_user_score::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_war_change_user_score::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_war_change_user_score::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::int64 msg_war_change_user_score::score() const {
  return score_;
}
inline void msg_war_change_user_score::set_score(::google::protobuf::int64 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// war_play_log

// repeated uint32 seats_win = 1;
inline int war_play_log::seats_win_size() const {
  return seats_win_.size();
}
inline void war_play_log::clear_seats_win() {
  seats_win_.Clear();
}
inline ::google::protobuf::uint32 war_play_log::seats_win(int index) const {
  return seats_win_.Get(index);
}
inline void war_play_log::set_seats_win(int index, ::google::protobuf::uint32 value) {
  seats_win_.Set(index, value);
}
inline void war_play_log::add_seats_win(::google::protobuf::uint32 value) {
  seats_win_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
war_play_log::seats_win() const {
  return seats_win_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
war_play_log::mutable_seats_win() {
  return &seats_win_;
}

// optional uint32 card = 2;
inline bool war_play_log::has_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void war_play_log::set_has_card() {
  _has_bits_[0] |= 0x00000002u;
}
inline void war_play_log::clear_has_card() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void war_play_log::clear_card() {
  card_ = 0u;
  clear_has_card();
}
inline ::google::protobuf::uint32 war_play_log::card() const {
  return card_;
}
inline void war_play_log::set_card(::google::protobuf::uint32 value) {
  set_has_card();
  card_ = value;
}

// optional uint32 index = 3;
inline bool war_play_log::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void war_play_log::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void war_play_log::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void war_play_log::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 war_play_log::index() const {
  return index_;
}
inline void war_play_log::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// msg_war_play_log_rep

// repeated .net.war_play_log logs = 1;
inline int msg_war_play_log_rep::logs_size() const {
  return logs_.size();
}
inline void msg_war_play_log_rep::clear_logs() {
  logs_.Clear();
}
inline const ::net::war_play_log& msg_war_play_log_rep::logs(int index) const {
  return logs_.Get(index);
}
inline ::net::war_play_log* msg_war_play_log_rep::mutable_logs(int index) {
  return logs_.Mutable(index);
}
inline ::net::war_play_log* msg_war_play_log_rep::add_logs() {
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::net::war_play_log >&
msg_war_play_log_rep::logs() const {
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::net::war_play_log >*
msg_war_play_log_rep::mutable_logs() {
  return &logs_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace net

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_war_5flogic_5fmsg_2eproto__INCLUDED
