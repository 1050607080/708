// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: land_logic_msg.proto

#ifndef PROTOBUF_land_5flogic_5fmsg_2eproto__INCLUDED
#define PROTOBUF_land_5flogic_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "base_msg_struct.pb.h"
#include "error_code.pb.h"
// @@protoc_insertion_point(includes)

namespace net {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

class msg_land_game_info_rep;
class msg_land_start_rep;
class msg_land_call_score_req;
class msg_land_call_score_rep;
class msg_land_req_hand_card_req;
class msg_land_hand_card_rep;
class msg_land_banker_info_rep;
class msg_land_out_card_req;
class msg_land_out_card_rep;
class msg_land_pass_card_req;
class msg_land_pass_card_rep;
class msg_land_game_over_rep;
class msg_land_marry_player;

// ===================================================================

class msg_land_game_info_rep : public ::google::protobuf::Message {
 public:
  msg_land_game_info_rep();
  virtual ~msg_land_game_info_rep();

  msg_land_game_info_rep(const msg_land_game_info_rep& from);

  inline msg_land_game_info_rep& operator=(const msg_land_game_info_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_land_game_info_rep& default_instance();

  void Swap(msg_land_game_info_rep* other);

  // implements Message ----------------------------------------------

  msg_land_game_info_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_land_game_info_rep& from);
  void MergeFrom(const msg_land_game_info_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bomb_count = 1;
  inline bool has_bomb_count() const;
  inline void clear_bomb_count();
  static const int kBombCountFieldNumber = 1;
  inline ::google::protobuf::uint32 bomb_count() const;
  inline void set_bomb_count(::google::protobuf::uint32 value);

  // optional uint32 banker_user = 2;
  inline bool has_banker_user() const;
  inline void clear_banker_user();
  static const int kBankerUserFieldNumber = 2;
  inline ::google::protobuf::uint32 banker_user() const;
  inline void set_banker_user(::google::protobuf::uint32 value);

  // optional uint32 cur_user = 3;
  inline bool has_cur_user() const;
  inline void clear_cur_user();
  static const int kCurUserFieldNumber = 3;
  inline ::google::protobuf::uint32 cur_user() const;
  inline void set_cur_user(::google::protobuf::uint32 value);

  // optional uint32 banker_score = 4;
  inline bool has_banker_score() const;
  inline void clear_banker_score();
  static const int kBankerScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 banker_score() const;
  inline void set_banker_score(::google::protobuf::uint32 value);

  // optional uint32 turn_winer = 5;
  inline bool has_turn_winer() const;
  inline void clear_turn_winer();
  static const int kTurnWinerFieldNumber = 5;
  inline ::google::protobuf::uint32 turn_winer() const;
  inline void set_turn_winer(::google::protobuf::uint32 value);

  // optional uint32 first_user = 6;
  inline bool has_first_user() const;
  inline void clear_first_user();
  static const int kFirstUserFieldNumber = 6;
  inline ::google::protobuf::uint32 first_user() const;
  inline void set_first_user(::google::protobuf::uint32 value);

  // repeated uint32 turn_card_data = 7;
  inline int turn_card_data_size() const;
  inline void clear_turn_card_data();
  static const int kTurnCardDataFieldNumber = 7;
  inline ::google::protobuf::uint32 turn_card_data(int index) const;
  inline void set_turn_card_data(int index, ::google::protobuf::uint32 value);
  inline void add_turn_card_data(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      turn_card_data() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_turn_card_data();

  // repeated uint32 banker_card = 8;
  inline int banker_card_size() const;
  inline void clear_banker_card();
  static const int kBankerCardFieldNumber = 8;
  inline ::google::protobuf::uint32 banker_card(int index) const;
  inline void set_banker_card(int index, ::google::protobuf::uint32 value);
  inline void add_banker_card(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      banker_card() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_banker_card();

  // repeated uint32 hand_card_count = 9;
  inline int hand_card_count_size() const;
  inline void clear_hand_card_count();
  static const int kHandCardCountFieldNumber = 9;
  inline ::google::protobuf::uint32 hand_card_count(int index) const;
  inline void set_hand_card_count(int index, ::google::protobuf::uint32 value);
  inline void add_hand_card_count(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hand_card_count() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hand_card_count();

  // repeated uint32 hand_card_data = 10;
  inline int hand_card_data_size() const;
  inline void clear_hand_card_data();
  static const int kHandCardDataFieldNumber = 10;
  inline ::google::protobuf::uint32 hand_card_data(int index) const;
  inline void set_hand_card_data(int index, ::google::protobuf::uint32 value);
  inline void add_hand_card_data(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hand_card_data() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hand_card_data();

  // optional uint32 game_state = 11;
  inline bool has_game_state() const;
  inline void clear_game_state();
  static const int kGameStateFieldNumber = 11;
  inline ::google::protobuf::uint32 game_state() const;
  inline void set_game_state(::google::protobuf::uint32 value);

  // optional uint32 wait_time = 12;
  inline bool has_wait_time() const;
  inline void clear_wait_time();
  static const int kWaitTimeFieldNumber = 12;
  inline ::google::protobuf::uint32 wait_time() const;
  inline void set_wait_time(::google::protobuf::uint32 value);

  // repeated uint32 call_score = 13;
  inline int call_score_size() const;
  inline void clear_call_score();
  static const int kCallScoreFieldNumber = 13;
  inline ::google::protobuf::uint32 call_score(int index) const;
  inline void set_call_score(int index, ::google::protobuf::uint32 value);
  inline void add_call_score(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      call_score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_call_score();

  // repeated uint32 mem_card_mac = 14;
  inline int mem_card_mac_size() const;
  inline void clear_mem_card_mac();
  static const int kMemCardMacFieldNumber = 14;
  inline ::google::protobuf::uint32 mem_card_mac(int index) const;
  inline void set_mem_card_mac(int index, ::google::protobuf::uint32 value);
  inline void add_mem_card_mac(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mem_card_mac() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mem_card_mac();

  // @@protoc_insertion_point(class_scope:net.msg_land_game_info_rep)
 private:
  inline void set_has_bomb_count();
  inline void clear_has_bomb_count();
  inline void set_has_banker_user();
  inline void clear_has_banker_user();
  inline void set_has_cur_user();
  inline void clear_has_cur_user();
  inline void set_has_banker_score();
  inline void clear_has_banker_score();
  inline void set_has_turn_winer();
  inline void clear_has_turn_winer();
  inline void set_has_first_user();
  inline void clear_has_first_user();
  inline void set_has_game_state();
  inline void clear_has_game_state();
  inline void set_has_wait_time();
  inline void clear_has_wait_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 bomb_count_;
  ::google::protobuf::uint32 banker_user_;
  ::google::protobuf::uint32 cur_user_;
  ::google::protobuf::uint32 banker_score_;
  ::google::protobuf::uint32 turn_winer_;
  ::google::protobuf::uint32 first_user_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > turn_card_data_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > banker_card_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hand_card_count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hand_card_data_;
  ::google::protobuf::uint32 game_state_;
  ::google::protobuf::uint32 wait_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > call_score_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mem_card_mac_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_land_game_info_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_land_start_rep : public ::google::protobuf::Message {
 public:
  msg_land_start_rep();
  virtual ~msg_land_start_rep();

  msg_land_start_rep(const msg_land_start_rep& from);

  inline msg_land_start_rep& operator=(const msg_land_start_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_land_start_rep& default_instance();

  void Swap(msg_land_start_rep* other);

  // implements Message ----------------------------------------------

  msg_land_start_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_land_start_rep& from);
  void MergeFrom(const msg_land_start_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 start_user = 1;
  inline bool has_start_user() const;
  inline void clear_start_user();
  static const int kStartUserFieldNumber = 1;
  inline ::google::protobuf::uint32 start_user() const;
  inline void set_start_user(::google::protobuf::uint32 value);

  // optional uint32 cur_user = 2;
  inline bool has_cur_user() const;
  inline void clear_cur_user();
  static const int kCurUserFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_user() const;
  inline void set_cur_user(::google::protobuf::uint32 value);

  // optional uint32 valid_card_data = 3;
  inline bool has_valid_card_data() const;
  inline void clear_valid_card_data();
  static const int kValidCardDataFieldNumber = 3;
  inline ::google::protobuf::uint32 valid_card_data() const;
  inline void set_valid_card_data(::google::protobuf::uint32 value);

  // optional uint32 valid_card_index = 4;
  inline bool has_valid_card_index() const;
  inline void clear_valid_card_index();
  static const int kValidCardIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 valid_card_index() const;
  inline void set_valid_card_index(::google::protobuf::uint32 value);

  // repeated uint32 card_data = 5;
  inline int card_data_size() const;
  inline void clear_card_data();
  static const int kCardDataFieldNumber = 5;
  inline ::google::protobuf::uint32 card_data(int index) const;
  inline void set_card_data(int index, ::google::protobuf::uint32 value);
  inline void add_card_data(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_data() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_data();

  // @@protoc_insertion_point(class_scope:net.msg_land_start_rep)
 private:
  inline void set_has_start_user();
  inline void clear_has_start_user();
  inline void set_has_cur_user();
  inline void clear_has_cur_user();
  inline void set_has_valid_card_data();
  inline void clear_has_valid_card_data();
  inline void set_has_valid_card_index();
  inline void clear_has_valid_card_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 start_user_;
  ::google::protobuf::uint32 cur_user_;
  ::google::protobuf::uint32 valid_card_data_;
  ::google::protobuf::uint32 valid_card_index_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_land_start_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_land_call_score_req : public ::google::protobuf::Message {
 public:
  msg_land_call_score_req();
  virtual ~msg_land_call_score_req();

  msg_land_call_score_req(const msg_land_call_score_req& from);

  inline msg_land_call_score_req& operator=(const msg_land_call_score_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_land_call_score_req& default_instance();

  void Swap(msg_land_call_score_req* other);

  // implements Message ----------------------------------------------

  msg_land_call_score_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_land_call_score_req& from);
  void MergeFrom(const msg_land_call_score_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 call_score = 1;
  inline bool has_call_score() const;
  inline void clear_call_score();
  static const int kCallScoreFieldNumber = 1;
  inline ::google::protobuf::uint32 call_score() const;
  inline void set_call_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_land_call_score_req)
 private:
  inline void set_has_call_score();
  inline void clear_has_call_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 call_score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_land_call_score_req* default_instance_;
};
// -------------------------------------------------------------------

class msg_land_call_score_rep : public ::google::protobuf::Message {
 public:
  msg_land_call_score_rep();
  virtual ~msg_land_call_score_rep();

  msg_land_call_score_rep(const msg_land_call_score_rep& from);

  inline msg_land_call_score_rep& operator=(const msg_land_call_score_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_land_call_score_rep& default_instance();

  void Swap(msg_land_call_score_rep* other);

  // implements Message ----------------------------------------------

  msg_land_call_score_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_land_call_score_rep& from);
  void MergeFrom(const msg_land_call_score_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cur_user = 1;
  inline bool has_cur_user() const;
  inline void clear_cur_user();
  static const int kCurUserFieldNumber = 1;
  inline ::google::protobuf::uint32 cur_user() const;
  inline void set_cur_user(::google::protobuf::uint32 value);

  // optional uint32 call_user = 2;
  inline bool has_call_user() const;
  inline void clear_call_user();
  static const int kCallUserFieldNumber = 2;
  inline ::google::protobuf::uint32 call_user() const;
  inline void set_call_user(::google::protobuf::uint32 value);

  // optional uint32 call_score = 3;
  inline bool has_call_score() const;
  inline void clear_call_score();
  static const int kCallScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 call_score() const;
  inline void set_call_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_land_call_score_rep)
 private:
  inline void set_has_cur_user();
  inline void clear_has_cur_user();
  inline void set_has_call_user();
  inline void clear_has_call_user();
  inline void set_has_call_score();
  inline void clear_has_call_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cur_user_;
  ::google::protobuf::uint32 call_user_;
  ::google::protobuf::uint32 call_score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_land_call_score_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_land_req_hand_card_req : public ::google::protobuf::Message {
 public:
  msg_land_req_hand_card_req();
  virtual ~msg_land_req_hand_card_req();

  msg_land_req_hand_card_req(const msg_land_req_hand_card_req& from);

  inline msg_land_req_hand_card_req& operator=(const msg_land_req_hand_card_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_land_req_hand_card_req& default_instance();

  void Swap(msg_land_req_hand_card_req* other);

  // implements Message ----------------------------------------------

  msg_land_req_hand_card_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_land_req_hand_card_req& from);
  void MergeFrom(const msg_land_req_hand_card_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chair_id = 1;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_land_req_hand_card_req)
 private:
  inline void set_has_chair_id();
  inline void clear_has_chair_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 chair_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_land_req_hand_card_req* default_instance_;
};
// -------------------------------------------------------------------

class msg_land_hand_card_rep : public ::google::protobuf::Message {
 public:
  msg_land_hand_card_rep();
  virtual ~msg_land_hand_card_rep();

  msg_land_hand_card_rep(const msg_land_hand_card_rep& from);

  inline msg_land_hand_card_rep& operator=(const msg_land_hand_card_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_land_hand_card_rep& default_instance();

  void Swap(msg_land_hand_card_rep* other);

  // implements Message ----------------------------------------------

  msg_land_hand_card_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_land_hand_card_rep& from);
  void MergeFrom(const msg_land_hand_card_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chair_id = 1;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // repeated uint32 card_data = 2;
  inline int card_data_size() const;
  inline void clear_card_data();
  static const int kCardDataFieldNumber = 2;
  inline ::google::protobuf::uint32 card_data(int index) const;
  inline void set_card_data(int index, ::google::protobuf::uint32 value);
  inline void add_card_data(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_data() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_data();

  // @@protoc_insertion_point(class_scope:net.msg_land_hand_card_rep)
 private:
  inline void set_has_chair_id();
  inline void clear_has_chair_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_data_;
  ::google::protobuf::uint32 chair_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_land_hand_card_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_land_banker_info_rep : public ::google::protobuf::Message {
 public:
  msg_land_banker_info_rep();
  virtual ~msg_land_banker_info_rep();

  msg_land_banker_info_rep(const msg_land_banker_info_rep& from);

  inline msg_land_banker_info_rep& operator=(const msg_land_banker_info_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_land_banker_info_rep& default_instance();

  void Swap(msg_land_banker_info_rep* other);

  // implements Message ----------------------------------------------

  msg_land_banker_info_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_land_banker_info_rep& from);
  void MergeFrom(const msg_land_banker_info_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 banker_user = 1;
  inline bool has_banker_user() const;
  inline void clear_banker_user();
  static const int kBankerUserFieldNumber = 1;
  inline ::google::protobuf::uint32 banker_user() const;
  inline void set_banker_user(::google::protobuf::uint32 value);

  // optional uint32 cur_user = 2;
  inline bool has_cur_user() const;
  inline void clear_cur_user();
  static const int kCurUserFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_user() const;
  inline void set_cur_user(::google::protobuf::uint32 value);

  // optional uint32 call_score = 3;
  inline bool has_call_score() const;
  inline void clear_call_score();
  static const int kCallScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 call_score() const;
  inline void set_call_score(::google::protobuf::uint32 value);

  // repeated uint32 banker_card = 4;
  inline int banker_card_size() const;
  inline void clear_banker_card();
  static const int kBankerCardFieldNumber = 4;
  inline ::google::protobuf::uint32 banker_card(int index) const;
  inline void set_banker_card(int index, ::google::protobuf::uint32 value);
  inline void add_banker_card(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      banker_card() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_banker_card();

  // repeated uint32 mem_card_mac = 5;
  inline int mem_card_mac_size() const;
  inline void clear_mem_card_mac();
  static const int kMemCardMacFieldNumber = 5;
  inline ::google::protobuf::uint32 mem_card_mac(int index) const;
  inline void set_mem_card_mac(int index, ::google::protobuf::uint32 value);
  inline void add_mem_card_mac(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mem_card_mac() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mem_card_mac();

  // @@protoc_insertion_point(class_scope:net.msg_land_banker_info_rep)
 private:
  inline void set_has_banker_user();
  inline void clear_has_banker_user();
  inline void set_has_cur_user();
  inline void clear_has_cur_user();
  inline void set_has_call_score();
  inline void clear_has_call_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 banker_user_;
  ::google::protobuf::uint32 cur_user_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > banker_card_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mem_card_mac_;
  ::google::protobuf::uint32 call_score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_land_banker_info_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_land_out_card_req : public ::google::protobuf::Message {
 public:
  msg_land_out_card_req();
  virtual ~msg_land_out_card_req();

  msg_land_out_card_req(const msg_land_out_card_req& from);

  inline msg_land_out_card_req& operator=(const msg_land_out_card_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_land_out_card_req& default_instance();

  void Swap(msg_land_out_card_req* other);

  // implements Message ----------------------------------------------

  msg_land_out_card_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_land_out_card_req& from);
  void MergeFrom(const msg_land_out_card_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 card_data = 1;
  inline int card_data_size() const;
  inline void clear_card_data();
  static const int kCardDataFieldNumber = 1;
  inline ::google::protobuf::uint32 card_data(int index) const;
  inline void set_card_data(int index, ::google::protobuf::uint32 value);
  inline void add_card_data(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_data() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_data();

  // @@protoc_insertion_point(class_scope:net.msg_land_out_card_req)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_land_out_card_req* default_instance_;
};
// -------------------------------------------------------------------

class msg_land_out_card_rep : public ::google::protobuf::Message {
 public:
  msg_land_out_card_rep();
  virtual ~msg_land_out_card_rep();

  msg_land_out_card_rep(const msg_land_out_card_rep& from);

  inline msg_land_out_card_rep& operator=(const msg_land_out_card_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_land_out_card_rep& default_instance();

  void Swap(msg_land_out_card_rep* other);

  // implements Message ----------------------------------------------

  msg_land_out_card_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_land_out_card_rep& from);
  void MergeFrom(const msg_land_out_card_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cur_user = 1;
  inline bool has_cur_user() const;
  inline void clear_cur_user();
  static const int kCurUserFieldNumber = 1;
  inline ::google::protobuf::uint32 cur_user() const;
  inline void set_cur_user(::google::protobuf::uint32 value);

  // optional uint32 out_card_user = 2;
  inline bool has_out_card_user() const;
  inline void clear_out_card_user();
  static const int kOutCardUserFieldNumber = 2;
  inline ::google::protobuf::uint32 out_card_user() const;
  inline void set_out_card_user(::google::protobuf::uint32 value);

  // repeated uint32 card_data = 3;
  inline int card_data_size() const;
  inline void clear_card_data();
  static const int kCardDataFieldNumber = 3;
  inline ::google::protobuf::uint32 card_data(int index) const;
  inline void set_card_data(int index, ::google::protobuf::uint32 value);
  inline void add_card_data(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_data() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_data();

  // repeated uint32 mem_card_mac = 4;
  inline int mem_card_mac_size() const;
  inline void clear_mem_card_mac();
  static const int kMemCardMacFieldNumber = 4;
  inline ::google::protobuf::uint32 mem_card_mac(int index) const;
  inline void set_mem_card_mac(int index, ::google::protobuf::uint32 value);
  inline void add_mem_card_mac(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mem_card_mac() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mem_card_mac();

  // @@protoc_insertion_point(class_scope:net.msg_land_out_card_rep)
 private:
  inline void set_has_cur_user();
  inline void clear_has_cur_user();
  inline void set_has_out_card_user();
  inline void clear_has_out_card_user();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cur_user_;
  ::google::protobuf::uint32 out_card_user_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_data_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mem_card_mac_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_land_out_card_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_land_pass_card_req : public ::google::protobuf::Message {
 public:
  msg_land_pass_card_req();
  virtual ~msg_land_pass_card_req();

  msg_land_pass_card_req(const msg_land_pass_card_req& from);

  inline msg_land_pass_card_req& operator=(const msg_land_pass_card_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_land_pass_card_req& default_instance();

  void Swap(msg_land_pass_card_req* other);

  // implements Message ----------------------------------------------

  msg_land_pass_card_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_land_pass_card_req& from);
  void MergeFrom(const msg_land_pass_card_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 reason = 1;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 1;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_land_pass_card_req)
 private:
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_land_pass_card_req* default_instance_;
};
// -------------------------------------------------------------------

class msg_land_pass_card_rep : public ::google::protobuf::Message {
 public:
  msg_land_pass_card_rep();
  virtual ~msg_land_pass_card_rep();

  msg_land_pass_card_rep(const msg_land_pass_card_rep& from);

  inline msg_land_pass_card_rep& operator=(const msg_land_pass_card_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_land_pass_card_rep& default_instance();

  void Swap(msg_land_pass_card_rep* other);

  // implements Message ----------------------------------------------

  msg_land_pass_card_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_land_pass_card_rep& from);
  void MergeFrom(const msg_land_pass_card_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 turn_over = 1;
  inline bool has_turn_over() const;
  inline void clear_turn_over();
  static const int kTurnOverFieldNumber = 1;
  inline ::google::protobuf::uint32 turn_over() const;
  inline void set_turn_over(::google::protobuf::uint32 value);

  // optional uint32 cur_user = 2;
  inline bool has_cur_user() const;
  inline void clear_cur_user();
  static const int kCurUserFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_user() const;
  inline void set_cur_user(::google::protobuf::uint32 value);

  // optional uint32 pass_card_user = 3;
  inline bool has_pass_card_user() const;
  inline void clear_pass_card_user();
  static const int kPassCardUserFieldNumber = 3;
  inline ::google::protobuf::uint32 pass_card_user() const;
  inline void set_pass_card_user(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_land_pass_card_rep)
 private:
  inline void set_has_turn_over();
  inline void clear_has_turn_over();
  inline void set_has_cur_user();
  inline void clear_has_cur_user();
  inline void set_has_pass_card_user();
  inline void clear_has_pass_card_user();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 turn_over_;
  ::google::protobuf::uint32 cur_user_;
  ::google::protobuf::uint32 pass_card_user_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_land_pass_card_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_land_game_over_rep : public ::google::protobuf::Message {
 public:
  msg_land_game_over_rep();
  virtual ~msg_land_game_over_rep();

  msg_land_game_over_rep(const msg_land_game_over_rep& from);

  inline msg_land_game_over_rep& operator=(const msg_land_game_over_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_land_game_over_rep& default_instance();

  void Swap(msg_land_game_over_rep* other);

  // implements Message ----------------------------------------------

  msg_land_game_over_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_land_game_over_rep& from);
  void MergeFrom(const msg_land_game_over_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 scores = 1;
  inline int scores_size() const;
  inline void clear_scores();
  static const int kScoresFieldNumber = 1;
  inline ::google::protobuf::int64 scores(int index) const;
  inline void set_scores(int index, ::google::protobuf::int64 value);
  inline void add_scores(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      scores() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_scores();

  // optional uint32 chun_tian = 2;
  inline bool has_chun_tian() const;
  inline void clear_chun_tian();
  static const int kChunTianFieldNumber = 2;
  inline ::google::protobuf::uint32 chun_tian() const;
  inline void set_chun_tian(::google::protobuf::uint32 value);

  // optional uint32 fan_chun_tian = 3;
  inline bool has_fan_chun_tian() const;
  inline void clear_fan_chun_tian();
  static const int kFanChunTianFieldNumber = 3;
  inline ::google::protobuf::uint32 fan_chun_tian() const;
  inline void set_fan_chun_tian(::google::protobuf::uint32 value);

  // optional uint32 bomb_count = 4;
  inline bool has_bomb_count() const;
  inline void clear_bomb_count();
  static const int kBombCountFieldNumber = 4;
  inline ::google::protobuf::uint32 bomb_count() const;
  inline void set_bomb_count(::google::protobuf::uint32 value);

  // repeated uint32 each_bomb_counts = 5;
  inline int each_bomb_counts_size() const;
  inline void clear_each_bomb_counts();
  static const int kEachBombCountsFieldNumber = 5;
  inline ::google::protobuf::uint32 each_bomb_counts(int index) const;
  inline void set_each_bomb_counts(int index, ::google::protobuf::uint32 value);
  inline void add_each_bomb_counts(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      each_bomb_counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_each_bomb_counts();

  // optional uint32 blind = 6;
  inline bool has_blind() const;
  inline void clear_blind();
  static const int kBlindFieldNumber = 6;
  inline ::google::protobuf::uint32 blind() const;
  inline void set_blind(::google::protobuf::uint32 value);

  // repeated uint32 card_counts = 7;
  inline int card_counts_size() const;
  inline void clear_card_counts();
  static const int kCardCountsFieldNumber = 7;
  inline ::google::protobuf::uint32 card_counts(int index) const;
  inline void set_card_counts(int index, ::google::protobuf::uint32 value);
  inline void add_card_counts(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_counts();

  // repeated uint32 hand_card_data = 8;
  inline int hand_card_data_size() const;
  inline void clear_hand_card_data();
  static const int kHandCardDataFieldNumber = 8;
  inline ::google::protobuf::uint32 hand_card_data(int index) const;
  inline void set_hand_card_data(int index, ::google::protobuf::uint32 value);
  inline void add_hand_card_data(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hand_card_data() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hand_card_data();

  // repeated .net.msg_cards all_card_data = 9;
  inline int all_card_data_size() const;
  inline void clear_all_card_data();
  static const int kAllCardDataFieldNumber = 9;
  inline const ::net::msg_cards& all_card_data(int index) const;
  inline ::net::msg_cards* mutable_all_card_data(int index);
  inline ::net::msg_cards* add_all_card_data();
  inline const ::google::protobuf::RepeatedPtrField< ::net::msg_cards >&
      all_card_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::net::msg_cards >*
      mutable_all_card_data();

  // @@protoc_insertion_point(class_scope:net.msg_land_game_over_rep)
 private:
  inline void set_has_chun_tian();
  inline void clear_has_chun_tian();
  inline void set_has_fan_chun_tian();
  inline void clear_has_fan_chun_tian();
  inline void set_has_bomb_count();
  inline void clear_has_bomb_count();
  inline void set_has_blind();
  inline void clear_has_blind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > scores_;
  ::google::protobuf::uint32 chun_tian_;
  ::google::protobuf::uint32 fan_chun_tian_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > each_bomb_counts_;
  ::google::protobuf::uint32 bomb_count_;
  ::google::protobuf::uint32 blind_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_counts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hand_card_data_;
  ::google::protobuf::RepeatedPtrField< ::net::msg_cards > all_card_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_land_game_over_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_land_marry_player : public ::google::protobuf::Message {
 public:
  msg_land_marry_player();
  virtual ~msg_land_marry_player();

  msg_land_marry_player(const msg_land_marry_player& from);

  inline msg_land_marry_player& operator=(const msg_land_marry_player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_land_marry_player& default_instance();

  void Swap(msg_land_marry_player* other);

  // implements Message ----------------------------------------------

  msg_land_marry_player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_land_marry_player& from);
  void MergeFrom(const msg_land_marry_player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:net.msg_land_marry_player)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_land_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_land_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_land_marry_player* default_instance_;
};
// ===================================================================


// ===================================================================

// msg_land_game_info_rep

// optional uint32 bomb_count = 1;
inline bool msg_land_game_info_rep::has_bomb_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_land_game_info_rep::set_has_bomb_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_land_game_info_rep::clear_has_bomb_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_land_game_info_rep::clear_bomb_count() {
  bomb_count_ = 0u;
  clear_has_bomb_count();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::bomb_count() const {
  return bomb_count_;
}
inline void msg_land_game_info_rep::set_bomb_count(::google::protobuf::uint32 value) {
  set_has_bomb_count();
  bomb_count_ = value;
}

// optional uint32 banker_user = 2;
inline bool msg_land_game_info_rep::has_banker_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_land_game_info_rep::set_has_banker_user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_land_game_info_rep::clear_has_banker_user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_land_game_info_rep::clear_banker_user() {
  banker_user_ = 0u;
  clear_has_banker_user();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::banker_user() const {
  return banker_user_;
}
inline void msg_land_game_info_rep::set_banker_user(::google::protobuf::uint32 value) {
  set_has_banker_user();
  banker_user_ = value;
}

// optional uint32 cur_user = 3;
inline bool msg_land_game_info_rep::has_cur_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_land_game_info_rep::set_has_cur_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_land_game_info_rep::clear_has_cur_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_land_game_info_rep::clear_cur_user() {
  cur_user_ = 0u;
  clear_has_cur_user();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::cur_user() const {
  return cur_user_;
}
inline void msg_land_game_info_rep::set_cur_user(::google::protobuf::uint32 value) {
  set_has_cur_user();
  cur_user_ = value;
}

// optional uint32 banker_score = 4;
inline bool msg_land_game_info_rep::has_banker_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_land_game_info_rep::set_has_banker_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_land_game_info_rep::clear_has_banker_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_land_game_info_rep::clear_banker_score() {
  banker_score_ = 0u;
  clear_has_banker_score();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::banker_score() const {
  return banker_score_;
}
inline void msg_land_game_info_rep::set_banker_score(::google::protobuf::uint32 value) {
  set_has_banker_score();
  banker_score_ = value;
}

// optional uint32 turn_winer = 5;
inline bool msg_land_game_info_rep::has_turn_winer() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msg_land_game_info_rep::set_has_turn_winer() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msg_land_game_info_rep::clear_has_turn_winer() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msg_land_game_info_rep::clear_turn_winer() {
  turn_winer_ = 0u;
  clear_has_turn_winer();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::turn_winer() const {
  return turn_winer_;
}
inline void msg_land_game_info_rep::set_turn_winer(::google::protobuf::uint32 value) {
  set_has_turn_winer();
  turn_winer_ = value;
}

// optional uint32 first_user = 6;
inline bool msg_land_game_info_rep::has_first_user() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msg_land_game_info_rep::set_has_first_user() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msg_land_game_info_rep::clear_has_first_user() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msg_land_game_info_rep::clear_first_user() {
  first_user_ = 0u;
  clear_has_first_user();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::first_user() const {
  return first_user_;
}
inline void msg_land_game_info_rep::set_first_user(::google::protobuf::uint32 value) {
  set_has_first_user();
  first_user_ = value;
}

// repeated uint32 turn_card_data = 7;
inline int msg_land_game_info_rep::turn_card_data_size() const {
  return turn_card_data_.size();
}
inline void msg_land_game_info_rep::clear_turn_card_data() {
  turn_card_data_.Clear();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::turn_card_data(int index) const {
  return turn_card_data_.Get(index);
}
inline void msg_land_game_info_rep::set_turn_card_data(int index, ::google::protobuf::uint32 value) {
  turn_card_data_.Set(index, value);
}
inline void msg_land_game_info_rep::add_turn_card_data(::google::protobuf::uint32 value) {
  turn_card_data_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_game_info_rep::turn_card_data() const {
  return turn_card_data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_game_info_rep::mutable_turn_card_data() {
  return &turn_card_data_;
}

// repeated uint32 banker_card = 8;
inline int msg_land_game_info_rep::banker_card_size() const {
  return banker_card_.size();
}
inline void msg_land_game_info_rep::clear_banker_card() {
  banker_card_.Clear();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::banker_card(int index) const {
  return banker_card_.Get(index);
}
inline void msg_land_game_info_rep::set_banker_card(int index, ::google::protobuf::uint32 value) {
  banker_card_.Set(index, value);
}
inline void msg_land_game_info_rep::add_banker_card(::google::protobuf::uint32 value) {
  banker_card_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_game_info_rep::banker_card() const {
  return banker_card_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_game_info_rep::mutable_banker_card() {
  return &banker_card_;
}

// repeated uint32 hand_card_count = 9;
inline int msg_land_game_info_rep::hand_card_count_size() const {
  return hand_card_count_.size();
}
inline void msg_land_game_info_rep::clear_hand_card_count() {
  hand_card_count_.Clear();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::hand_card_count(int index) const {
  return hand_card_count_.Get(index);
}
inline void msg_land_game_info_rep::set_hand_card_count(int index, ::google::protobuf::uint32 value) {
  hand_card_count_.Set(index, value);
}
inline void msg_land_game_info_rep::add_hand_card_count(::google::protobuf::uint32 value) {
  hand_card_count_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_game_info_rep::hand_card_count() const {
  return hand_card_count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_game_info_rep::mutable_hand_card_count() {
  return &hand_card_count_;
}

// repeated uint32 hand_card_data = 10;
inline int msg_land_game_info_rep::hand_card_data_size() const {
  return hand_card_data_.size();
}
inline void msg_land_game_info_rep::clear_hand_card_data() {
  hand_card_data_.Clear();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::hand_card_data(int index) const {
  return hand_card_data_.Get(index);
}
inline void msg_land_game_info_rep::set_hand_card_data(int index, ::google::protobuf::uint32 value) {
  hand_card_data_.Set(index, value);
}
inline void msg_land_game_info_rep::add_hand_card_data(::google::protobuf::uint32 value) {
  hand_card_data_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_game_info_rep::hand_card_data() const {
  return hand_card_data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_game_info_rep::mutable_hand_card_data() {
  return &hand_card_data_;
}

// optional uint32 game_state = 11;
inline bool msg_land_game_info_rep::has_game_state() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void msg_land_game_info_rep::set_has_game_state() {
  _has_bits_[0] |= 0x00000400u;
}
inline void msg_land_game_info_rep::clear_has_game_state() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void msg_land_game_info_rep::clear_game_state() {
  game_state_ = 0u;
  clear_has_game_state();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::game_state() const {
  return game_state_;
}
inline void msg_land_game_info_rep::set_game_state(::google::protobuf::uint32 value) {
  set_has_game_state();
  game_state_ = value;
}

// optional uint32 wait_time = 12;
inline bool msg_land_game_info_rep::has_wait_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void msg_land_game_info_rep::set_has_wait_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void msg_land_game_info_rep::clear_has_wait_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void msg_land_game_info_rep::clear_wait_time() {
  wait_time_ = 0u;
  clear_has_wait_time();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::wait_time() const {
  return wait_time_;
}
inline void msg_land_game_info_rep::set_wait_time(::google::protobuf::uint32 value) {
  set_has_wait_time();
  wait_time_ = value;
}

// repeated uint32 call_score = 13;
inline int msg_land_game_info_rep::call_score_size() const {
  return call_score_.size();
}
inline void msg_land_game_info_rep::clear_call_score() {
  call_score_.Clear();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::call_score(int index) const {
  return call_score_.Get(index);
}
inline void msg_land_game_info_rep::set_call_score(int index, ::google::protobuf::uint32 value) {
  call_score_.Set(index, value);
}
inline void msg_land_game_info_rep::add_call_score(::google::protobuf::uint32 value) {
  call_score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_game_info_rep::call_score() const {
  return call_score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_game_info_rep::mutable_call_score() {
  return &call_score_;
}

// repeated uint32 mem_card_mac = 14;
inline int msg_land_game_info_rep::mem_card_mac_size() const {
  return mem_card_mac_.size();
}
inline void msg_land_game_info_rep::clear_mem_card_mac() {
  mem_card_mac_.Clear();
}
inline ::google::protobuf::uint32 msg_land_game_info_rep::mem_card_mac(int index) const {
  return mem_card_mac_.Get(index);
}
inline void msg_land_game_info_rep::set_mem_card_mac(int index, ::google::protobuf::uint32 value) {
  mem_card_mac_.Set(index, value);
}
inline void msg_land_game_info_rep::add_mem_card_mac(::google::protobuf::uint32 value) {
  mem_card_mac_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_game_info_rep::mem_card_mac() const {
  return mem_card_mac_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_game_info_rep::mutable_mem_card_mac() {
  return &mem_card_mac_;
}

// -------------------------------------------------------------------

// msg_land_start_rep

// optional uint32 start_user = 1;
inline bool msg_land_start_rep::has_start_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_land_start_rep::set_has_start_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_land_start_rep::clear_has_start_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_land_start_rep::clear_start_user() {
  start_user_ = 0u;
  clear_has_start_user();
}
inline ::google::protobuf::uint32 msg_land_start_rep::start_user() const {
  return start_user_;
}
inline void msg_land_start_rep::set_start_user(::google::protobuf::uint32 value) {
  set_has_start_user();
  start_user_ = value;
}

// optional uint32 cur_user = 2;
inline bool msg_land_start_rep::has_cur_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_land_start_rep::set_has_cur_user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_land_start_rep::clear_has_cur_user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_land_start_rep::clear_cur_user() {
  cur_user_ = 0u;
  clear_has_cur_user();
}
inline ::google::protobuf::uint32 msg_land_start_rep::cur_user() const {
  return cur_user_;
}
inline void msg_land_start_rep::set_cur_user(::google::protobuf::uint32 value) {
  set_has_cur_user();
  cur_user_ = value;
}

// optional uint32 valid_card_data = 3;
inline bool msg_land_start_rep::has_valid_card_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_land_start_rep::set_has_valid_card_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_land_start_rep::clear_has_valid_card_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_land_start_rep::clear_valid_card_data() {
  valid_card_data_ = 0u;
  clear_has_valid_card_data();
}
inline ::google::protobuf::uint32 msg_land_start_rep::valid_card_data() const {
  return valid_card_data_;
}
inline void msg_land_start_rep::set_valid_card_data(::google::protobuf::uint32 value) {
  set_has_valid_card_data();
  valid_card_data_ = value;
}

// optional uint32 valid_card_index = 4;
inline bool msg_land_start_rep::has_valid_card_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_land_start_rep::set_has_valid_card_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_land_start_rep::clear_has_valid_card_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_land_start_rep::clear_valid_card_index() {
  valid_card_index_ = 0u;
  clear_has_valid_card_index();
}
inline ::google::protobuf::uint32 msg_land_start_rep::valid_card_index() const {
  return valid_card_index_;
}
inline void msg_land_start_rep::set_valid_card_index(::google::protobuf::uint32 value) {
  set_has_valid_card_index();
  valid_card_index_ = value;
}

// repeated uint32 card_data = 5;
inline int msg_land_start_rep::card_data_size() const {
  return card_data_.size();
}
inline void msg_land_start_rep::clear_card_data() {
  card_data_.Clear();
}
inline ::google::protobuf::uint32 msg_land_start_rep::card_data(int index) const {
  return card_data_.Get(index);
}
inline void msg_land_start_rep::set_card_data(int index, ::google::protobuf::uint32 value) {
  card_data_.Set(index, value);
}
inline void msg_land_start_rep::add_card_data(::google::protobuf::uint32 value) {
  card_data_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_start_rep::card_data() const {
  return card_data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_start_rep::mutable_card_data() {
  return &card_data_;
}

// -------------------------------------------------------------------

// msg_land_call_score_req

// optional uint32 call_score = 1;
inline bool msg_land_call_score_req::has_call_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_land_call_score_req::set_has_call_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_land_call_score_req::clear_has_call_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_land_call_score_req::clear_call_score() {
  call_score_ = 0u;
  clear_has_call_score();
}
inline ::google::protobuf::uint32 msg_land_call_score_req::call_score() const {
  return call_score_;
}
inline void msg_land_call_score_req::set_call_score(::google::protobuf::uint32 value) {
  set_has_call_score();
  call_score_ = value;
}

// -------------------------------------------------------------------

// msg_land_call_score_rep

// optional uint32 cur_user = 1;
inline bool msg_land_call_score_rep::has_cur_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_land_call_score_rep::set_has_cur_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_land_call_score_rep::clear_has_cur_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_land_call_score_rep::clear_cur_user() {
  cur_user_ = 0u;
  clear_has_cur_user();
}
inline ::google::protobuf::uint32 msg_land_call_score_rep::cur_user() const {
  return cur_user_;
}
inline void msg_land_call_score_rep::set_cur_user(::google::protobuf::uint32 value) {
  set_has_cur_user();
  cur_user_ = value;
}

// optional uint32 call_user = 2;
inline bool msg_land_call_score_rep::has_call_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_land_call_score_rep::set_has_call_user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_land_call_score_rep::clear_has_call_user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_land_call_score_rep::clear_call_user() {
  call_user_ = 0u;
  clear_has_call_user();
}
inline ::google::protobuf::uint32 msg_land_call_score_rep::call_user() const {
  return call_user_;
}
inline void msg_land_call_score_rep::set_call_user(::google::protobuf::uint32 value) {
  set_has_call_user();
  call_user_ = value;
}

// optional uint32 call_score = 3;
inline bool msg_land_call_score_rep::has_call_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_land_call_score_rep::set_has_call_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_land_call_score_rep::clear_has_call_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_land_call_score_rep::clear_call_score() {
  call_score_ = 0u;
  clear_has_call_score();
}
inline ::google::protobuf::uint32 msg_land_call_score_rep::call_score() const {
  return call_score_;
}
inline void msg_land_call_score_rep::set_call_score(::google::protobuf::uint32 value) {
  set_has_call_score();
  call_score_ = value;
}

// -------------------------------------------------------------------

// msg_land_req_hand_card_req

// optional uint32 chair_id = 1;
inline bool msg_land_req_hand_card_req::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_land_req_hand_card_req::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_land_req_hand_card_req::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_land_req_hand_card_req::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 msg_land_req_hand_card_req::chair_id() const {
  return chair_id_;
}
inline void msg_land_req_hand_card_req::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// -------------------------------------------------------------------

// msg_land_hand_card_rep

// optional uint32 chair_id = 1;
inline bool msg_land_hand_card_rep::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_land_hand_card_rep::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_land_hand_card_rep::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_land_hand_card_rep::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 msg_land_hand_card_rep::chair_id() const {
  return chair_id_;
}
inline void msg_land_hand_card_rep::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// repeated uint32 card_data = 2;
inline int msg_land_hand_card_rep::card_data_size() const {
  return card_data_.size();
}
inline void msg_land_hand_card_rep::clear_card_data() {
  card_data_.Clear();
}
inline ::google::protobuf::uint32 msg_land_hand_card_rep::card_data(int index) const {
  return card_data_.Get(index);
}
inline void msg_land_hand_card_rep::set_card_data(int index, ::google::protobuf::uint32 value) {
  card_data_.Set(index, value);
}
inline void msg_land_hand_card_rep::add_card_data(::google::protobuf::uint32 value) {
  card_data_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_hand_card_rep::card_data() const {
  return card_data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_hand_card_rep::mutable_card_data() {
  return &card_data_;
}

// -------------------------------------------------------------------

// msg_land_banker_info_rep

// optional uint32 banker_user = 1;
inline bool msg_land_banker_info_rep::has_banker_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_land_banker_info_rep::set_has_banker_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_land_banker_info_rep::clear_has_banker_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_land_banker_info_rep::clear_banker_user() {
  banker_user_ = 0u;
  clear_has_banker_user();
}
inline ::google::protobuf::uint32 msg_land_banker_info_rep::banker_user() const {
  return banker_user_;
}
inline void msg_land_banker_info_rep::set_banker_user(::google::protobuf::uint32 value) {
  set_has_banker_user();
  banker_user_ = value;
}

// optional uint32 cur_user = 2;
inline bool msg_land_banker_info_rep::has_cur_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_land_banker_info_rep::set_has_cur_user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_land_banker_info_rep::clear_has_cur_user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_land_banker_info_rep::clear_cur_user() {
  cur_user_ = 0u;
  clear_has_cur_user();
}
inline ::google::protobuf::uint32 msg_land_banker_info_rep::cur_user() const {
  return cur_user_;
}
inline void msg_land_banker_info_rep::set_cur_user(::google::protobuf::uint32 value) {
  set_has_cur_user();
  cur_user_ = value;
}

// optional uint32 call_score = 3;
inline bool msg_land_banker_info_rep::has_call_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_land_banker_info_rep::set_has_call_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_land_banker_info_rep::clear_has_call_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_land_banker_info_rep::clear_call_score() {
  call_score_ = 0u;
  clear_has_call_score();
}
inline ::google::protobuf::uint32 msg_land_banker_info_rep::call_score() const {
  return call_score_;
}
inline void msg_land_banker_info_rep::set_call_score(::google::protobuf::uint32 value) {
  set_has_call_score();
  call_score_ = value;
}

// repeated uint32 banker_card = 4;
inline int msg_land_banker_info_rep::banker_card_size() const {
  return banker_card_.size();
}
inline void msg_land_banker_info_rep::clear_banker_card() {
  banker_card_.Clear();
}
inline ::google::protobuf::uint32 msg_land_banker_info_rep::banker_card(int index) const {
  return banker_card_.Get(index);
}
inline void msg_land_banker_info_rep::set_banker_card(int index, ::google::protobuf::uint32 value) {
  banker_card_.Set(index, value);
}
inline void msg_land_banker_info_rep::add_banker_card(::google::protobuf::uint32 value) {
  banker_card_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_banker_info_rep::banker_card() const {
  return banker_card_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_banker_info_rep::mutable_banker_card() {
  return &banker_card_;
}

// repeated uint32 mem_card_mac = 5;
inline int msg_land_banker_info_rep::mem_card_mac_size() const {
  return mem_card_mac_.size();
}
inline void msg_land_banker_info_rep::clear_mem_card_mac() {
  mem_card_mac_.Clear();
}
inline ::google::protobuf::uint32 msg_land_banker_info_rep::mem_card_mac(int index) const {
  return mem_card_mac_.Get(index);
}
inline void msg_land_banker_info_rep::set_mem_card_mac(int index, ::google::protobuf::uint32 value) {
  mem_card_mac_.Set(index, value);
}
inline void msg_land_banker_info_rep::add_mem_card_mac(::google::protobuf::uint32 value) {
  mem_card_mac_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_banker_info_rep::mem_card_mac() const {
  return mem_card_mac_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_banker_info_rep::mutable_mem_card_mac() {
  return &mem_card_mac_;
}

// -------------------------------------------------------------------

// msg_land_out_card_req

// repeated uint32 card_data = 1;
inline int msg_land_out_card_req::card_data_size() const {
  return card_data_.size();
}
inline void msg_land_out_card_req::clear_card_data() {
  card_data_.Clear();
}
inline ::google::protobuf::uint32 msg_land_out_card_req::card_data(int index) const {
  return card_data_.Get(index);
}
inline void msg_land_out_card_req::set_card_data(int index, ::google::protobuf::uint32 value) {
  card_data_.Set(index, value);
}
inline void msg_land_out_card_req::add_card_data(::google::protobuf::uint32 value) {
  card_data_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_out_card_req::card_data() const {
  return card_data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_out_card_req::mutable_card_data() {
  return &card_data_;
}

// -------------------------------------------------------------------

// msg_land_out_card_rep

// optional uint32 cur_user = 1;
inline bool msg_land_out_card_rep::has_cur_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_land_out_card_rep::set_has_cur_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_land_out_card_rep::clear_has_cur_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_land_out_card_rep::clear_cur_user() {
  cur_user_ = 0u;
  clear_has_cur_user();
}
inline ::google::protobuf::uint32 msg_land_out_card_rep::cur_user() const {
  return cur_user_;
}
inline void msg_land_out_card_rep::set_cur_user(::google::protobuf::uint32 value) {
  set_has_cur_user();
  cur_user_ = value;
}

// optional uint32 out_card_user = 2;
inline bool msg_land_out_card_rep::has_out_card_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_land_out_card_rep::set_has_out_card_user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_land_out_card_rep::clear_has_out_card_user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_land_out_card_rep::clear_out_card_user() {
  out_card_user_ = 0u;
  clear_has_out_card_user();
}
inline ::google::protobuf::uint32 msg_land_out_card_rep::out_card_user() const {
  return out_card_user_;
}
inline void msg_land_out_card_rep::set_out_card_user(::google::protobuf::uint32 value) {
  set_has_out_card_user();
  out_card_user_ = value;
}

// repeated uint32 card_data = 3;
inline int msg_land_out_card_rep::card_data_size() const {
  return card_data_.size();
}
inline void msg_land_out_card_rep::clear_card_data() {
  card_data_.Clear();
}
inline ::google::protobuf::uint32 msg_land_out_card_rep::card_data(int index) const {
  return card_data_.Get(index);
}
inline void msg_land_out_card_rep::set_card_data(int index, ::google::protobuf::uint32 value) {
  card_data_.Set(index, value);
}
inline void msg_land_out_card_rep::add_card_data(::google::protobuf::uint32 value) {
  card_data_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_out_card_rep::card_data() const {
  return card_data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_out_card_rep::mutable_card_data() {
  return &card_data_;
}

// repeated uint32 mem_card_mac = 4;
inline int msg_land_out_card_rep::mem_card_mac_size() const {
  return mem_card_mac_.size();
}
inline void msg_land_out_card_rep::clear_mem_card_mac() {
  mem_card_mac_.Clear();
}
inline ::google::protobuf::uint32 msg_land_out_card_rep::mem_card_mac(int index) const {
  return mem_card_mac_.Get(index);
}
inline void msg_land_out_card_rep::set_mem_card_mac(int index, ::google::protobuf::uint32 value) {
  mem_card_mac_.Set(index, value);
}
inline void msg_land_out_card_rep::add_mem_card_mac(::google::protobuf::uint32 value) {
  mem_card_mac_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_out_card_rep::mem_card_mac() const {
  return mem_card_mac_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_out_card_rep::mutable_mem_card_mac() {
  return &mem_card_mac_;
}

// -------------------------------------------------------------------

// msg_land_pass_card_req

// optional uint32 reason = 1;
inline bool msg_land_pass_card_req::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_land_pass_card_req::set_has_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_land_pass_card_req::clear_has_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_land_pass_card_req::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 msg_land_pass_card_req::reason() const {
  return reason_;
}
inline void msg_land_pass_card_req::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// msg_land_pass_card_rep

// optional uint32 turn_over = 1;
inline bool msg_land_pass_card_rep::has_turn_over() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_land_pass_card_rep::set_has_turn_over() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_land_pass_card_rep::clear_has_turn_over() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_land_pass_card_rep::clear_turn_over() {
  turn_over_ = 0u;
  clear_has_turn_over();
}
inline ::google::protobuf::uint32 msg_land_pass_card_rep::turn_over() const {
  return turn_over_;
}
inline void msg_land_pass_card_rep::set_turn_over(::google::protobuf::uint32 value) {
  set_has_turn_over();
  turn_over_ = value;
}

// optional uint32 cur_user = 2;
inline bool msg_land_pass_card_rep::has_cur_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_land_pass_card_rep::set_has_cur_user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_land_pass_card_rep::clear_has_cur_user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_land_pass_card_rep::clear_cur_user() {
  cur_user_ = 0u;
  clear_has_cur_user();
}
inline ::google::protobuf::uint32 msg_land_pass_card_rep::cur_user() const {
  return cur_user_;
}
inline void msg_land_pass_card_rep::set_cur_user(::google::protobuf::uint32 value) {
  set_has_cur_user();
  cur_user_ = value;
}

// optional uint32 pass_card_user = 3;
inline bool msg_land_pass_card_rep::has_pass_card_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_land_pass_card_rep::set_has_pass_card_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_land_pass_card_rep::clear_has_pass_card_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_land_pass_card_rep::clear_pass_card_user() {
  pass_card_user_ = 0u;
  clear_has_pass_card_user();
}
inline ::google::protobuf::uint32 msg_land_pass_card_rep::pass_card_user() const {
  return pass_card_user_;
}
inline void msg_land_pass_card_rep::set_pass_card_user(::google::protobuf::uint32 value) {
  set_has_pass_card_user();
  pass_card_user_ = value;
}

// -------------------------------------------------------------------

// msg_land_game_over_rep

// repeated int64 scores = 1;
inline int msg_land_game_over_rep::scores_size() const {
  return scores_.size();
}
inline void msg_land_game_over_rep::clear_scores() {
  scores_.Clear();
}
inline ::google::protobuf::int64 msg_land_game_over_rep::scores(int index) const {
  return scores_.Get(index);
}
inline void msg_land_game_over_rep::set_scores(int index, ::google::protobuf::int64 value) {
  scores_.Set(index, value);
}
inline void msg_land_game_over_rep::add_scores(::google::protobuf::int64 value) {
  scores_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
msg_land_game_over_rep::scores() const {
  return scores_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
msg_land_game_over_rep::mutable_scores() {
  return &scores_;
}

// optional uint32 chun_tian = 2;
inline bool msg_land_game_over_rep::has_chun_tian() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_land_game_over_rep::set_has_chun_tian() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_land_game_over_rep::clear_has_chun_tian() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_land_game_over_rep::clear_chun_tian() {
  chun_tian_ = 0u;
  clear_has_chun_tian();
}
inline ::google::protobuf::uint32 msg_land_game_over_rep::chun_tian() const {
  return chun_tian_;
}
inline void msg_land_game_over_rep::set_chun_tian(::google::protobuf::uint32 value) {
  set_has_chun_tian();
  chun_tian_ = value;
}

// optional uint32 fan_chun_tian = 3;
inline bool msg_land_game_over_rep::has_fan_chun_tian() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_land_game_over_rep::set_has_fan_chun_tian() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_land_game_over_rep::clear_has_fan_chun_tian() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_land_game_over_rep::clear_fan_chun_tian() {
  fan_chun_tian_ = 0u;
  clear_has_fan_chun_tian();
}
inline ::google::protobuf::uint32 msg_land_game_over_rep::fan_chun_tian() const {
  return fan_chun_tian_;
}
inline void msg_land_game_over_rep::set_fan_chun_tian(::google::protobuf::uint32 value) {
  set_has_fan_chun_tian();
  fan_chun_tian_ = value;
}

// optional uint32 bomb_count = 4;
inline bool msg_land_game_over_rep::has_bomb_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_land_game_over_rep::set_has_bomb_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_land_game_over_rep::clear_has_bomb_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_land_game_over_rep::clear_bomb_count() {
  bomb_count_ = 0u;
  clear_has_bomb_count();
}
inline ::google::protobuf::uint32 msg_land_game_over_rep::bomb_count() const {
  return bomb_count_;
}
inline void msg_land_game_over_rep::set_bomb_count(::google::protobuf::uint32 value) {
  set_has_bomb_count();
  bomb_count_ = value;
}

// repeated uint32 each_bomb_counts = 5;
inline int msg_land_game_over_rep::each_bomb_counts_size() const {
  return each_bomb_counts_.size();
}
inline void msg_land_game_over_rep::clear_each_bomb_counts() {
  each_bomb_counts_.Clear();
}
inline ::google::protobuf::uint32 msg_land_game_over_rep::each_bomb_counts(int index) const {
  return each_bomb_counts_.Get(index);
}
inline void msg_land_game_over_rep::set_each_bomb_counts(int index, ::google::protobuf::uint32 value) {
  each_bomb_counts_.Set(index, value);
}
inline void msg_land_game_over_rep::add_each_bomb_counts(::google::protobuf::uint32 value) {
  each_bomb_counts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_game_over_rep::each_bomb_counts() const {
  return each_bomb_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_game_over_rep::mutable_each_bomb_counts() {
  return &each_bomb_counts_;
}

// optional uint32 blind = 6;
inline bool msg_land_game_over_rep::has_blind() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msg_land_game_over_rep::set_has_blind() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msg_land_game_over_rep::clear_has_blind() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msg_land_game_over_rep::clear_blind() {
  blind_ = 0u;
  clear_has_blind();
}
inline ::google::protobuf::uint32 msg_land_game_over_rep::blind() const {
  return blind_;
}
inline void msg_land_game_over_rep::set_blind(::google::protobuf::uint32 value) {
  set_has_blind();
  blind_ = value;
}

// repeated uint32 card_counts = 7;
inline int msg_land_game_over_rep::card_counts_size() const {
  return card_counts_.size();
}
inline void msg_land_game_over_rep::clear_card_counts() {
  card_counts_.Clear();
}
inline ::google::protobuf::uint32 msg_land_game_over_rep::card_counts(int index) const {
  return card_counts_.Get(index);
}
inline void msg_land_game_over_rep::set_card_counts(int index, ::google::protobuf::uint32 value) {
  card_counts_.Set(index, value);
}
inline void msg_land_game_over_rep::add_card_counts(::google::protobuf::uint32 value) {
  card_counts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_game_over_rep::card_counts() const {
  return card_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_game_over_rep::mutable_card_counts() {
  return &card_counts_;
}

// repeated uint32 hand_card_data = 8;
inline int msg_land_game_over_rep::hand_card_data_size() const {
  return hand_card_data_.size();
}
inline void msg_land_game_over_rep::clear_hand_card_data() {
  hand_card_data_.Clear();
}
inline ::google::protobuf::uint32 msg_land_game_over_rep::hand_card_data(int index) const {
  return hand_card_data_.Get(index);
}
inline void msg_land_game_over_rep::set_hand_card_data(int index, ::google::protobuf::uint32 value) {
  hand_card_data_.Set(index, value);
}
inline void msg_land_game_over_rep::add_hand_card_data(::google::protobuf::uint32 value) {
  hand_card_data_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_land_game_over_rep::hand_card_data() const {
  return hand_card_data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_land_game_over_rep::mutable_hand_card_data() {
  return &hand_card_data_;
}

// repeated .net.msg_cards all_card_data = 9;
inline int msg_land_game_over_rep::all_card_data_size() const {
  return all_card_data_.size();
}
inline void msg_land_game_over_rep::clear_all_card_data() {
  all_card_data_.Clear();
}
inline const ::net::msg_cards& msg_land_game_over_rep::all_card_data(int index) const {
  return all_card_data_.Get(index);
}
inline ::net::msg_cards* msg_land_game_over_rep::mutable_all_card_data(int index) {
  return all_card_data_.Mutable(index);
}
inline ::net::msg_cards* msg_land_game_over_rep::add_all_card_data() {
  return all_card_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::net::msg_cards >&
msg_land_game_over_rep::all_card_data() const {
  return all_card_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::net::msg_cards >*
msg_land_game_over_rep::mutable_all_card_data() {
  return &all_card_data_;
}

// -------------------------------------------------------------------

// msg_land_marry_player


// @@protoc_insertion_point(namespace_scope)

}  // namespace net

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_land_5flogic_5fmsg_2eproto__INCLUDED
