// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zajinhua_logic_msg.proto

#ifndef PROTOBUF_zajinhua_5flogic_5fmsg_2eproto__INCLUDED
#define PROTOBUF_zajinhua_5flogic_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "base_msg_struct.pb.h"
#include "error_code.pb.h"
// @@protoc_insertion_point(includes)

namespace net {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

class msg_zajinhua_game_info_free_rep;
class msg_zajinhua_game_info_play_rep;
class msg_zajinhua_start_rep;
class msg_zajinhua_addscore_req;
class msg_zajinhua_addscore_rep;
class msg_zajinhua_giveup_req;
class msg_zajinhua_giveup_rep;
class msg_zajinhua_compare_card_req;
class msg_zajinhua_compare_card_rep;
class msg_zajinhua_look_card_req;
class msg_zajinhua_look_card_rep;
class msg_zajinhua_open_card_req;
class msg_zajinhua_open_card;
class msg_zajinhua_game_end_rep;
class msg_zajinhua_show_card_req;
class msg_zajinhua_show_card_rep;

// ===================================================================

class msg_zajinhua_game_info_free_rep : public ::google::protobuf::Message {
 public:
  msg_zajinhua_game_info_free_rep();
  virtual ~msg_zajinhua_game_info_free_rep();

  msg_zajinhua_game_info_free_rep(const msg_zajinhua_game_info_free_rep& from);

  inline msg_zajinhua_game_info_free_rep& operator=(const msg_zajinhua_game_info_free_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_game_info_free_rep& default_instance();

  void Swap(msg_zajinhua_game_info_free_rep* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_game_info_free_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_game_info_free_rep& from);
  void MergeFrom(const msg_zajinhua_game_info_free_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_game_info_free_rep)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_game_info_free_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_game_info_play_rep : public ::google::protobuf::Message {
 public:
  msg_zajinhua_game_info_play_rep();
  virtual ~msg_zajinhua_game_info_play_rep();

  msg_zajinhua_game_info_play_rep(const msg_zajinhua_game_info_play_rep& from);

  inline msg_zajinhua_game_info_play_rep& operator=(const msg_zajinhua_game_info_play_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_game_info_play_rep& default_instance();

  void Swap(msg_zajinhua_game_info_play_rep* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_game_info_play_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_game_info_play_rep& from);
  void MergeFrom(const msg_zajinhua_game_info_play_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 current_times = 3;
  inline bool has_current_times() const;
  inline void clear_current_times();
  static const int kCurrentTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 current_times() const;
  inline void set_current_times(::google::protobuf::uint32 value);

  // optional int64 user_max_score = 4;
  inline bool has_user_max_score() const;
  inline void clear_user_max_score();
  static const int kUserMaxScoreFieldNumber = 4;
  inline ::google::protobuf::int64 user_max_score() const;
  inline void set_user_max_score(::google::protobuf::int64 value);

  // optional uint32 banker_user = 5;
  inline bool has_banker_user() const;
  inline void clear_banker_user();
  static const int kBankerUserFieldNumber = 5;
  inline ::google::protobuf::uint32 banker_user() const;
  inline void set_banker_user(::google::protobuf::uint32 value);

  // optional uint32 current_user = 6;
  inline bool has_current_user() const;
  inline void clear_current_user();
  static const int kCurrentUserFieldNumber = 6;
  inline ::google::protobuf::uint32 current_user() const;
  inline void set_current_user(::google::protobuf::uint32 value);

  // repeated uint32 play_status = 7;
  inline int play_status_size() const;
  inline void clear_play_status();
  static const int kPlayStatusFieldNumber = 7;
  inline ::google::protobuf::uint32 play_status(int index) const;
  inline void set_play_status(int index, ::google::protobuf::uint32 value);
  inline void add_play_status(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      play_status() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_play_status();

  // repeated uint32 card_stat = 8;
  inline int card_stat_size() const;
  inline void clear_card_stat();
  static const int kCardStatFieldNumber = 8;
  inline ::google::protobuf::uint32 card_stat(int index) const;
  inline void set_card_stat(int index, ::google::protobuf::uint32 value);
  inline void add_card_stat(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_stat() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_stat();

  // repeated int64 table_score = 9;
  inline int table_score_size() const;
  inline void clear_table_score();
  static const int kTableScoreFieldNumber = 9;
  inline ::google::protobuf::int64 table_score(int index) const;
  inline void set_table_score(int index, ::google::protobuf::int64 value);
  inline void add_table_score(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      table_score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_table_score();

  // repeated uint32 hand_card_data = 10;
  inline int hand_card_data_size() const;
  inline void clear_hand_card_data();
  static const int kHandCardDataFieldNumber = 10;
  inline ::google::protobuf::uint32 hand_card_data(int index) const;
  inline void set_hand_card_data(int index, ::google::protobuf::uint32 value);
  inline void add_hand_card_data(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hand_card_data() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hand_card_data();

  // optional uint32 compare_state = 11;
  inline bool has_compare_state() const;
  inline void clear_compare_state();
  static const int kCompareStateFieldNumber = 11;
  inline ::google::protobuf::uint32 compare_state() const;
  inline void set_compare_state(::google::protobuf::uint32 value);

  // optional uint32 current_round = 12;
  inline bool has_current_round() const;
  inline void clear_current_round();
  static const int kCurrentRoundFieldNumber = 12;
  inline ::google::protobuf::uint32 current_round() const;
  inline void set_current_round(::google::protobuf::uint32 value);

  // optional uint32 oper_time = 13;
  inline bool has_oper_time() const;
  inline void clear_oper_time();
  static const int kOperTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 oper_time() const;
  inline void set_oper_time(::google::protobuf::uint32 value);

  // optional uint32 is_mingpai = 14;
  inline bool has_is_mingpai() const;
  inline void clear_is_mingpai();
  static const int kIsMingpaiFieldNumber = 14;
  inline ::google::protobuf::uint32 is_mingpai() const;
  inline void set_is_mingpai(::google::protobuf::uint32 value);

  // optional uint32 card_type = 15;
  inline bool has_card_type() const;
  inline void clear_card_type();
  static const int kCardTypeFieldNumber = 15;
  inline ::google::protobuf::uint32 card_type() const;
  inline void set_card_type(::google::protobuf::uint32 value);

  // optional uint32 game_status = 16;
  inline bool has_game_status() const;
  inline void clear_game_status();
  static const int kGameStatusFieldNumber = 16;
  inline ::google::protobuf::uint32 game_status() const;
  inline void set_game_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_game_info_play_rep)
 private:
  inline void set_has_current_times();
  inline void clear_has_current_times();
  inline void set_has_user_max_score();
  inline void clear_has_user_max_score();
  inline void set_has_banker_user();
  inline void clear_has_banker_user();
  inline void set_has_current_user();
  inline void clear_has_current_user();
  inline void set_has_compare_state();
  inline void clear_has_compare_state();
  inline void set_has_current_round();
  inline void clear_has_current_round();
  inline void set_has_oper_time();
  inline void clear_has_oper_time();
  inline void set_has_is_mingpai();
  inline void clear_has_is_mingpai();
  inline void set_has_card_type();
  inline void clear_has_card_type();
  inline void set_has_game_status();
  inline void clear_has_game_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 user_max_score_;
  ::google::protobuf::uint32 current_times_;
  ::google::protobuf::uint32 banker_user_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > play_status_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_stat_;
  ::google::protobuf::uint32 current_user_;
  ::google::protobuf::uint32 compare_state_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > table_score_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hand_card_data_;
  ::google::protobuf::uint32 current_round_;
  ::google::protobuf::uint32 oper_time_;
  ::google::protobuf::uint32 is_mingpai_;
  ::google::protobuf::uint32 card_type_;
  ::google::protobuf::uint32 game_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_game_info_play_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_start_rep : public ::google::protobuf::Message {
 public:
  msg_zajinhua_start_rep();
  virtual ~msg_zajinhua_start_rep();

  msg_zajinhua_start_rep(const msg_zajinhua_start_rep& from);

  inline msg_zajinhua_start_rep& operator=(const msg_zajinhua_start_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_start_rep& default_instance();

  void Swap(msg_zajinhua_start_rep* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_start_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_start_rep& from);
  void MergeFrom(const msg_zajinhua_start_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 banker_user = 1;
  inline bool has_banker_user() const;
  inline void clear_banker_user();
  static const int kBankerUserFieldNumber = 1;
  inline ::google::protobuf::uint32 banker_user() const;
  inline void set_banker_user(::google::protobuf::uint32 value);

  // optional uint32 current_user = 2;
  inline bool has_current_user() const;
  inline void clear_current_user();
  static const int kCurrentUserFieldNumber = 2;
  inline ::google::protobuf::uint32 current_user() const;
  inline void set_current_user(::google::protobuf::uint32 value);

  // optional int64 user_max_score = 3;
  inline bool has_user_max_score() const;
  inline void clear_user_max_score();
  static const int kUserMaxScoreFieldNumber = 3;
  inline ::google::protobuf::int64 user_max_score() const;
  inline void set_user_max_score(::google::protobuf::int64 value);

  // repeated uint32 play_status = 4;
  inline int play_status_size() const;
  inline void clear_play_status();
  static const int kPlayStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 play_status(int index) const;
  inline void set_play_status(int index, ::google::protobuf::uint32 value);
  inline void add_play_status(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      play_status() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_play_status();

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_start_rep)
 private:
  inline void set_has_banker_user();
  inline void clear_has_banker_user();
  inline void set_has_current_user();
  inline void clear_has_current_user();
  inline void set_has_user_max_score();
  inline void clear_has_user_max_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 banker_user_;
  ::google::protobuf::uint32 current_user_;
  ::google::protobuf::int64 user_max_score_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > play_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_start_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_addscore_req : public ::google::protobuf::Message {
 public:
  msg_zajinhua_addscore_req();
  virtual ~msg_zajinhua_addscore_req();

  msg_zajinhua_addscore_req(const msg_zajinhua_addscore_req& from);

  inline msg_zajinhua_addscore_req& operator=(const msg_zajinhua_addscore_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_addscore_req& default_instance();

  void Swap(msg_zajinhua_addscore_req* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_addscore_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_addscore_req& from);
  void MergeFrom(const msg_zajinhua_addscore_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 add_score = 1;
  inline bool has_add_score() const;
  inline void clear_add_score();
  static const int kAddScoreFieldNumber = 1;
  inline ::google::protobuf::int64 add_score() const;
  inline void set_add_score(::google::protobuf::int64 value);

  // optional uint32 is_allin = 2;
  inline bool has_is_allin() const;
  inline void clear_is_allin();
  static const int kIsAllinFieldNumber = 2;
  inline ::google::protobuf::uint32 is_allin() const;
  inline void set_is_allin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_addscore_req)
 private:
  inline void set_has_add_score();
  inline void clear_has_add_score();
  inline void set_has_is_allin();
  inline void clear_has_is_allin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 add_score_;
  ::google::protobuf::uint32 is_allin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_addscore_req* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_addscore_rep : public ::google::protobuf::Message {
 public:
  msg_zajinhua_addscore_rep();
  virtual ~msg_zajinhua_addscore_rep();

  msg_zajinhua_addscore_rep(const msg_zajinhua_addscore_rep& from);

  inline msg_zajinhua_addscore_rep& operator=(const msg_zajinhua_addscore_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_addscore_rep& default_instance();

  void Swap(msg_zajinhua_addscore_rep* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_addscore_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_addscore_rep& from);
  void MergeFrom(const msg_zajinhua_addscore_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 current_user = 1;
  inline bool has_current_user() const;
  inline void clear_current_user();
  static const int kCurrentUserFieldNumber = 1;
  inline ::google::protobuf::uint32 current_user() const;
  inline void set_current_user(::google::protobuf::uint32 value);

  // optional uint32 add_score_user = 2;
  inline bool has_add_score_user() const;
  inline void clear_add_score_user();
  static const int kAddScoreUserFieldNumber = 2;
  inline ::google::protobuf::uint32 add_score_user() const;
  inline void set_add_score_user(::google::protobuf::uint32 value);

  // optional uint32 compare_state = 3;
  inline bool has_compare_state() const;
  inline void clear_compare_state();
  static const int kCompareStateFieldNumber = 3;
  inline ::google::protobuf::uint32 compare_state() const;
  inline void set_compare_state(::google::protobuf::uint32 value);

  // optional int64 add_score_count = 4;
  inline bool has_add_score_count() const;
  inline void clear_add_score_count();
  static const int kAddScoreCountFieldNumber = 4;
  inline ::google::protobuf::int64 add_score_count() const;
  inline void set_add_score_count(::google::protobuf::int64 value);

  // optional uint32 current_times = 5;
  inline bool has_current_times() const;
  inline void clear_current_times();
  static const int kCurrentTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 current_times() const;
  inline void set_current_times(::google::protobuf::uint32 value);

  // optional uint32 current_round = 6;
  inline bool has_current_round() const;
  inline void clear_current_round();
  static const int kCurrentRoundFieldNumber = 6;
  inline ::google::protobuf::uint32 current_round() const;
  inline void set_current_round(::google::protobuf::uint32 value);

  // optional uint32 only_compare = 7;
  inline bool has_only_compare() const;
  inline void clear_only_compare();
  static const int kOnlyCompareFieldNumber = 7;
  inline ::google::protobuf::uint32 only_compare() const;
  inline void set_only_compare(::google::protobuf::uint32 value);

  // optional uint32 is_allin = 8;
  inline bool has_is_allin() const;
  inline void clear_is_allin();
  static const int kIsAllinFieldNumber = 8;
  inline ::google::protobuf::uint32 is_allin() const;
  inline void set_is_allin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_addscore_rep)
 private:
  inline void set_has_current_user();
  inline void clear_has_current_user();
  inline void set_has_add_score_user();
  inline void clear_has_add_score_user();
  inline void set_has_compare_state();
  inline void clear_has_compare_state();
  inline void set_has_add_score_count();
  inline void clear_has_add_score_count();
  inline void set_has_current_times();
  inline void clear_has_current_times();
  inline void set_has_current_round();
  inline void clear_has_current_round();
  inline void set_has_only_compare();
  inline void clear_has_only_compare();
  inline void set_has_is_allin();
  inline void clear_has_is_allin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 current_user_;
  ::google::protobuf::uint32 add_score_user_;
  ::google::protobuf::int64 add_score_count_;
  ::google::protobuf::uint32 compare_state_;
  ::google::protobuf::uint32 current_times_;
  ::google::protobuf::uint32 current_round_;
  ::google::protobuf::uint32 only_compare_;
  ::google::protobuf::uint32 is_allin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_addscore_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_giveup_req : public ::google::protobuf::Message {
 public:
  msg_zajinhua_giveup_req();
  virtual ~msg_zajinhua_giveup_req();

  msg_zajinhua_giveup_req(const msg_zajinhua_giveup_req& from);

  inline msg_zajinhua_giveup_req& operator=(const msg_zajinhua_giveup_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_giveup_req& default_instance();

  void Swap(msg_zajinhua_giveup_req* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_giveup_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_giveup_req& from);
  void MergeFrom(const msg_zajinhua_giveup_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 giveup_reason = 1;
  inline bool has_giveup_reason() const;
  inline void clear_giveup_reason();
  static const int kGiveupReasonFieldNumber = 1;
  inline ::google::protobuf::uint32 giveup_reason() const;
  inline void set_giveup_reason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_giveup_req)
 private:
  inline void set_has_giveup_reason();
  inline void clear_has_giveup_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 giveup_reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_giveup_req* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_giveup_rep : public ::google::protobuf::Message {
 public:
  msg_zajinhua_giveup_rep();
  virtual ~msg_zajinhua_giveup_rep();

  msg_zajinhua_giveup_rep(const msg_zajinhua_giveup_rep& from);

  inline msg_zajinhua_giveup_rep& operator=(const msg_zajinhua_giveup_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_giveup_rep& default_instance();

  void Swap(msg_zajinhua_giveup_rep* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_giveup_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_giveup_rep& from);
  void MergeFrom(const msg_zajinhua_giveup_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 giveup_user = 1;
  inline bool has_giveup_user() const;
  inline void clear_giveup_user();
  static const int kGiveupUserFieldNumber = 1;
  inline ::google::protobuf::uint32 giveup_user() const;
  inline void set_giveup_user(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_giveup_rep)
 private:
  inline void set_has_giveup_user();
  inline void clear_has_giveup_user();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 giveup_user_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_giveup_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_compare_card_req : public ::google::protobuf::Message {
 public:
  msg_zajinhua_compare_card_req();
  virtual ~msg_zajinhua_compare_card_req();

  msg_zajinhua_compare_card_req(const msg_zajinhua_compare_card_req& from);

  inline msg_zajinhua_compare_card_req& operator=(const msg_zajinhua_compare_card_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_compare_card_req& default_instance();

  void Swap(msg_zajinhua_compare_card_req* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_compare_card_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_compare_card_req& from);
  void MergeFrom(const msg_zajinhua_compare_card_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 compare_user = 1;
  inline bool has_compare_user() const;
  inline void clear_compare_user();
  static const int kCompareUserFieldNumber = 1;
  inline ::google::protobuf::uint32 compare_user() const;
  inline void set_compare_user(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_compare_card_req)
 private:
  inline void set_has_compare_user();
  inline void clear_has_compare_user();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 compare_user_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_compare_card_req* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_compare_card_rep : public ::google::protobuf::Message {
 public:
  msg_zajinhua_compare_card_rep();
  virtual ~msg_zajinhua_compare_card_rep();

  msg_zajinhua_compare_card_rep(const msg_zajinhua_compare_card_rep& from);

  inline msg_zajinhua_compare_card_rep& operator=(const msg_zajinhua_compare_card_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_compare_card_rep& default_instance();

  void Swap(msg_zajinhua_compare_card_rep* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_compare_card_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_compare_card_rep& from);
  void MergeFrom(const msg_zajinhua_compare_card_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 current_user = 1;
  inline bool has_current_user() const;
  inline void clear_current_user();
  static const int kCurrentUserFieldNumber = 1;
  inline ::google::protobuf::uint32 current_user() const;
  inline void set_current_user(::google::protobuf::uint32 value);

  // repeated uint32 compare_user = 2;
  inline int compare_user_size() const;
  inline void clear_compare_user();
  static const int kCompareUserFieldNumber = 2;
  inline ::google::protobuf::uint32 compare_user(int index) const;
  inline void set_compare_user(int index, ::google::protobuf::uint32 value);
  inline void add_compare_user(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      compare_user() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_compare_user();

  // optional uint32 lost_user = 3;
  inline bool has_lost_user() const;
  inline void clear_lost_user();
  static const int kLostUserFieldNumber = 3;
  inline ::google::protobuf::uint32 lost_user() const;
  inline void set_lost_user(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_compare_card_rep)
 private:
  inline void set_has_current_user();
  inline void clear_has_current_user();
  inline void set_has_lost_user();
  inline void clear_has_lost_user();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > compare_user_;
  ::google::protobuf::uint32 current_user_;
  ::google::protobuf::uint32 lost_user_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_compare_card_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_look_card_req : public ::google::protobuf::Message {
 public:
  msg_zajinhua_look_card_req();
  virtual ~msg_zajinhua_look_card_req();

  msg_zajinhua_look_card_req(const msg_zajinhua_look_card_req& from);

  inline msg_zajinhua_look_card_req& operator=(const msg_zajinhua_look_card_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_look_card_req& default_instance();

  void Swap(msg_zajinhua_look_card_req* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_look_card_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_look_card_req& from);
  void MergeFrom(const msg_zajinhua_look_card_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chairid = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairidFieldNumber = 1;
  inline ::google::protobuf::uint32 chairid() const;
  inline void set_chairid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_look_card_req)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 chairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_look_card_req* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_look_card_rep : public ::google::protobuf::Message {
 public:
  msg_zajinhua_look_card_rep();
  virtual ~msg_zajinhua_look_card_rep();

  msg_zajinhua_look_card_rep(const msg_zajinhua_look_card_rep& from);

  inline msg_zajinhua_look_card_rep& operator=(const msg_zajinhua_look_card_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_look_card_rep& default_instance();

  void Swap(msg_zajinhua_look_card_rep* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_look_card_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_look_card_rep& from);
  void MergeFrom(const msg_zajinhua_look_card_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 look_card_user = 1;
  inline bool has_look_card_user() const;
  inline void clear_look_card_user();
  static const int kLookCardUserFieldNumber = 1;
  inline ::google::protobuf::uint32 look_card_user() const;
  inline void set_look_card_user(::google::protobuf::uint32 value);

  // repeated uint32 card_data = 2;
  inline int card_data_size() const;
  inline void clear_card_data();
  static const int kCardDataFieldNumber = 2;
  inline ::google::protobuf::uint32 card_data(int index) const;
  inline void set_card_data(int index, ::google::protobuf::uint32 value);
  inline void add_card_data(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_data() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_data();

  // optional uint32 card_type = 3;
  inline bool has_card_type() const;
  inline void clear_card_type();
  static const int kCardTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 card_type() const;
  inline void set_card_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_look_card_rep)
 private:
  inline void set_has_look_card_user();
  inline void clear_has_look_card_user();
  inline void set_has_card_type();
  inline void clear_has_card_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_data_;
  ::google::protobuf::uint32 look_card_user_;
  ::google::protobuf::uint32 card_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_look_card_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_open_card_req : public ::google::protobuf::Message {
 public:
  msg_zajinhua_open_card_req();
  virtual ~msg_zajinhua_open_card_req();

  msg_zajinhua_open_card_req(const msg_zajinhua_open_card_req& from);

  inline msg_zajinhua_open_card_req& operator=(const msg_zajinhua_open_card_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_open_card_req& default_instance();

  void Swap(msg_zajinhua_open_card_req* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_open_card_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_open_card_req& from);
  void MergeFrom(const msg_zajinhua_open_card_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_open_card_req)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_open_card_req* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_open_card : public ::google::protobuf::Message {
 public:
  msg_zajinhua_open_card();
  virtual ~msg_zajinhua_open_card();

  msg_zajinhua_open_card(const msg_zajinhua_open_card& from);

  inline msg_zajinhua_open_card& operator=(const msg_zajinhua_open_card& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_open_card& default_instance();

  void Swap(msg_zajinhua_open_card* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_open_card* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_open_card& from);
  void MergeFrom(const msg_zajinhua_open_card& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 winner = 1;
  inline bool has_winner() const;
  inline void clear_winner();
  static const int kWinnerFieldNumber = 1;
  inline ::google::protobuf::uint32 winner() const;
  inline void set_winner(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_open_card)
 private:
  inline void set_has_winner();
  inline void clear_has_winner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 winner_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_open_card* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_game_end_rep : public ::google::protobuf::Message {
 public:
  msg_zajinhua_game_end_rep();
  virtual ~msg_zajinhua_game_end_rep();

  msg_zajinhua_game_end_rep(const msg_zajinhua_game_end_rep& from);

  inline msg_zajinhua_game_end_rep& operator=(const msg_zajinhua_game_end_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_game_end_rep& default_instance();

  void Swap(msg_zajinhua_game_end_rep* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_game_end_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_game_end_rep& from);
  void MergeFrom(const msg_zajinhua_game_end_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 game_score = 1;
  inline int game_score_size() const;
  inline void clear_game_score();
  static const int kGameScoreFieldNumber = 1;
  inline ::google::protobuf::int64 game_score(int index) const;
  inline void set_game_score(int index, ::google::protobuf::int64 value);
  inline void add_game_score(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      game_score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_game_score();

  // repeated .net.msg_cards card_data = 2;
  inline int card_data_size() const;
  inline void clear_card_data();
  static const int kCardDataFieldNumber = 2;
  inline const ::net::msg_cards& card_data(int index) const;
  inline ::net::msg_cards* mutable_card_data(int index);
  inline ::net::msg_cards* add_card_data();
  inline const ::google::protobuf::RepeatedPtrField< ::net::msg_cards >&
      card_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::net::msg_cards >*
      mutable_card_data();

  // repeated uint32 compare_user = 3;
  inline int compare_user_size() const;
  inline void clear_compare_user();
  static const int kCompareUserFieldNumber = 3;
  inline ::google::protobuf::uint32 compare_user(int index) const;
  inline void set_compare_user(int index, ::google::protobuf::uint32 value);
  inline void add_compare_user(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      compare_user() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_compare_user();

  // optional uint32 end_state = 4;
  inline bool has_end_state() const;
  inline void clear_end_state();
  static const int kEndStateFieldNumber = 4;
  inline ::google::protobuf::uint32 end_state() const;
  inline void set_end_state(::google::protobuf::uint32 value);

  // repeated int64 special_score = 5;
  inline int special_score_size() const;
  inline void clear_special_score();
  static const int kSpecialScoreFieldNumber = 5;
  inline ::google::protobuf::int64 special_score(int index) const;
  inline void set_special_score(int index, ::google::protobuf::int64 value);
  inline void add_special_score(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      special_score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_special_score();

  // repeated uint32 card_types = 6;
  inline int card_types_size() const;
  inline void clear_card_types();
  static const int kCardTypesFieldNumber = 6;
  inline ::google::protobuf::uint32 card_types(int index) const;
  inline void set_card_types(int index, ::google::protobuf::uint32 value);
  inline void add_card_types(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_types() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_types();

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_game_end_rep)
 private:
  inline void set_has_end_state();
  inline void clear_has_end_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > game_score_;
  ::google::protobuf::RepeatedPtrField< ::net::msg_cards > card_data_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > compare_user_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > special_score_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_types_;
  ::google::protobuf::uint32 end_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_game_end_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_show_card_req : public ::google::protobuf::Message {
 public:
  msg_zajinhua_show_card_req();
  virtual ~msg_zajinhua_show_card_req();

  msg_zajinhua_show_card_req(const msg_zajinhua_show_card_req& from);

  inline msg_zajinhua_show_card_req& operator=(const msg_zajinhua_show_card_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_show_card_req& default_instance();

  void Swap(msg_zajinhua_show_card_req* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_show_card_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_show_card_req& from);
  void MergeFrom(const msg_zajinhua_show_card_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_show_card_req)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_show_card_req* default_instance_;
};
// -------------------------------------------------------------------

class msg_zajinhua_show_card_rep : public ::google::protobuf::Message {
 public:
  msg_zajinhua_show_card_rep();
  virtual ~msg_zajinhua_show_card_rep();

  msg_zajinhua_show_card_rep(const msg_zajinhua_show_card_rep& from);

  inline msg_zajinhua_show_card_rep& operator=(const msg_zajinhua_show_card_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_zajinhua_show_card_rep& default_instance();

  void Swap(msg_zajinhua_show_card_rep* other);

  // implements Message ----------------------------------------------

  msg_zajinhua_show_card_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_zajinhua_show_card_rep& from);
  void MergeFrom(const msg_zajinhua_show_card_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 show_chairid = 1;
  inline bool has_show_chairid() const;
  inline void clear_show_chairid();
  static const int kShowChairidFieldNumber = 1;
  inline ::google::protobuf::uint32 show_chairid() const;
  inline void set_show_chairid(::google::protobuf::uint32 value);

  // repeated uint32 cards = 2;
  inline int cards_size() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 2;
  inline ::google::protobuf::uint32 cards(int index) const;
  inline void set_cards(int index, ::google::protobuf::uint32 value);
  inline void add_cards(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cards();

  // @@protoc_insertion_point(class_scope:net.msg_zajinhua_show_card_rep)
 private:
  inline void set_has_show_chairid();
  inline void clear_has_show_chairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cards_;
  ::google::protobuf::uint32 show_chairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_AssignDesc_zajinhua_5flogic_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_zajinhua_5flogic_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_zajinhua_show_card_rep* default_instance_;
};
// ===================================================================


// ===================================================================

// msg_zajinhua_game_info_free_rep

// -------------------------------------------------------------------

// msg_zajinhua_game_info_play_rep

// optional uint32 current_times = 3;
inline bool msg_zajinhua_game_info_play_rep::has_current_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_zajinhua_game_info_play_rep::set_has_current_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_zajinhua_game_info_play_rep::clear_has_current_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_zajinhua_game_info_play_rep::clear_current_times() {
  current_times_ = 0u;
  clear_has_current_times();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_info_play_rep::current_times() const {
  return current_times_;
}
inline void msg_zajinhua_game_info_play_rep::set_current_times(::google::protobuf::uint32 value) {
  set_has_current_times();
  current_times_ = value;
}

// optional int64 user_max_score = 4;
inline bool msg_zajinhua_game_info_play_rep::has_user_max_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_zajinhua_game_info_play_rep::set_has_user_max_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_zajinhua_game_info_play_rep::clear_has_user_max_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_zajinhua_game_info_play_rep::clear_user_max_score() {
  user_max_score_ = GOOGLE_LONGLONG(0);
  clear_has_user_max_score();
}
inline ::google::protobuf::int64 msg_zajinhua_game_info_play_rep::user_max_score() const {
  return user_max_score_;
}
inline void msg_zajinhua_game_info_play_rep::set_user_max_score(::google::protobuf::int64 value) {
  set_has_user_max_score();
  user_max_score_ = value;
}

// optional uint32 banker_user = 5;
inline bool msg_zajinhua_game_info_play_rep::has_banker_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_zajinhua_game_info_play_rep::set_has_banker_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_zajinhua_game_info_play_rep::clear_has_banker_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_zajinhua_game_info_play_rep::clear_banker_user() {
  banker_user_ = 0u;
  clear_has_banker_user();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_info_play_rep::banker_user() const {
  return banker_user_;
}
inline void msg_zajinhua_game_info_play_rep::set_banker_user(::google::protobuf::uint32 value) {
  set_has_banker_user();
  banker_user_ = value;
}

// optional uint32 current_user = 6;
inline bool msg_zajinhua_game_info_play_rep::has_current_user() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_zajinhua_game_info_play_rep::set_has_current_user() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_zajinhua_game_info_play_rep::clear_has_current_user() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_zajinhua_game_info_play_rep::clear_current_user() {
  current_user_ = 0u;
  clear_has_current_user();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_info_play_rep::current_user() const {
  return current_user_;
}
inline void msg_zajinhua_game_info_play_rep::set_current_user(::google::protobuf::uint32 value) {
  set_has_current_user();
  current_user_ = value;
}

// repeated uint32 play_status = 7;
inline int msg_zajinhua_game_info_play_rep::play_status_size() const {
  return play_status_.size();
}
inline void msg_zajinhua_game_info_play_rep::clear_play_status() {
  play_status_.Clear();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_info_play_rep::play_status(int index) const {
  return play_status_.Get(index);
}
inline void msg_zajinhua_game_info_play_rep::set_play_status(int index, ::google::protobuf::uint32 value) {
  play_status_.Set(index, value);
}
inline void msg_zajinhua_game_info_play_rep::add_play_status(::google::protobuf::uint32 value) {
  play_status_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_zajinhua_game_info_play_rep::play_status() const {
  return play_status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_zajinhua_game_info_play_rep::mutable_play_status() {
  return &play_status_;
}

// repeated uint32 card_stat = 8;
inline int msg_zajinhua_game_info_play_rep::card_stat_size() const {
  return card_stat_.size();
}
inline void msg_zajinhua_game_info_play_rep::clear_card_stat() {
  card_stat_.Clear();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_info_play_rep::card_stat(int index) const {
  return card_stat_.Get(index);
}
inline void msg_zajinhua_game_info_play_rep::set_card_stat(int index, ::google::protobuf::uint32 value) {
  card_stat_.Set(index, value);
}
inline void msg_zajinhua_game_info_play_rep::add_card_stat(::google::protobuf::uint32 value) {
  card_stat_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_zajinhua_game_info_play_rep::card_stat() const {
  return card_stat_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_zajinhua_game_info_play_rep::mutable_card_stat() {
  return &card_stat_;
}

// repeated int64 table_score = 9;
inline int msg_zajinhua_game_info_play_rep::table_score_size() const {
  return table_score_.size();
}
inline void msg_zajinhua_game_info_play_rep::clear_table_score() {
  table_score_.Clear();
}
inline ::google::protobuf::int64 msg_zajinhua_game_info_play_rep::table_score(int index) const {
  return table_score_.Get(index);
}
inline void msg_zajinhua_game_info_play_rep::set_table_score(int index, ::google::protobuf::int64 value) {
  table_score_.Set(index, value);
}
inline void msg_zajinhua_game_info_play_rep::add_table_score(::google::protobuf::int64 value) {
  table_score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
msg_zajinhua_game_info_play_rep::table_score() const {
  return table_score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
msg_zajinhua_game_info_play_rep::mutable_table_score() {
  return &table_score_;
}

// repeated uint32 hand_card_data = 10;
inline int msg_zajinhua_game_info_play_rep::hand_card_data_size() const {
  return hand_card_data_.size();
}
inline void msg_zajinhua_game_info_play_rep::clear_hand_card_data() {
  hand_card_data_.Clear();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_info_play_rep::hand_card_data(int index) const {
  return hand_card_data_.Get(index);
}
inline void msg_zajinhua_game_info_play_rep::set_hand_card_data(int index, ::google::protobuf::uint32 value) {
  hand_card_data_.Set(index, value);
}
inline void msg_zajinhua_game_info_play_rep::add_hand_card_data(::google::protobuf::uint32 value) {
  hand_card_data_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_zajinhua_game_info_play_rep::hand_card_data() const {
  return hand_card_data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_zajinhua_game_info_play_rep::mutable_hand_card_data() {
  return &hand_card_data_;
}

// optional uint32 compare_state = 11;
inline bool msg_zajinhua_game_info_play_rep::has_compare_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void msg_zajinhua_game_info_play_rep::set_has_compare_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void msg_zajinhua_game_info_play_rep::clear_has_compare_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void msg_zajinhua_game_info_play_rep::clear_compare_state() {
  compare_state_ = 0u;
  clear_has_compare_state();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_info_play_rep::compare_state() const {
  return compare_state_;
}
inline void msg_zajinhua_game_info_play_rep::set_compare_state(::google::protobuf::uint32 value) {
  set_has_compare_state();
  compare_state_ = value;
}

// optional uint32 current_round = 12;
inline bool msg_zajinhua_game_info_play_rep::has_current_round() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void msg_zajinhua_game_info_play_rep::set_has_current_round() {
  _has_bits_[0] |= 0x00000200u;
}
inline void msg_zajinhua_game_info_play_rep::clear_has_current_round() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void msg_zajinhua_game_info_play_rep::clear_current_round() {
  current_round_ = 0u;
  clear_has_current_round();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_info_play_rep::current_round() const {
  return current_round_;
}
inline void msg_zajinhua_game_info_play_rep::set_current_round(::google::protobuf::uint32 value) {
  set_has_current_round();
  current_round_ = value;
}

// optional uint32 oper_time = 13;
inline bool msg_zajinhua_game_info_play_rep::has_oper_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void msg_zajinhua_game_info_play_rep::set_has_oper_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void msg_zajinhua_game_info_play_rep::clear_has_oper_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void msg_zajinhua_game_info_play_rep::clear_oper_time() {
  oper_time_ = 0u;
  clear_has_oper_time();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_info_play_rep::oper_time() const {
  return oper_time_;
}
inline void msg_zajinhua_game_info_play_rep::set_oper_time(::google::protobuf::uint32 value) {
  set_has_oper_time();
  oper_time_ = value;
}

// optional uint32 is_mingpai = 14;
inline bool msg_zajinhua_game_info_play_rep::has_is_mingpai() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void msg_zajinhua_game_info_play_rep::set_has_is_mingpai() {
  _has_bits_[0] |= 0x00000800u;
}
inline void msg_zajinhua_game_info_play_rep::clear_has_is_mingpai() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void msg_zajinhua_game_info_play_rep::clear_is_mingpai() {
  is_mingpai_ = 0u;
  clear_has_is_mingpai();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_info_play_rep::is_mingpai() const {
  return is_mingpai_;
}
inline void msg_zajinhua_game_info_play_rep::set_is_mingpai(::google::protobuf::uint32 value) {
  set_has_is_mingpai();
  is_mingpai_ = value;
}

// optional uint32 card_type = 15;
inline bool msg_zajinhua_game_info_play_rep::has_card_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void msg_zajinhua_game_info_play_rep::set_has_card_type() {
  _has_bits_[0] |= 0x00001000u;
}
inline void msg_zajinhua_game_info_play_rep::clear_has_card_type() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void msg_zajinhua_game_info_play_rep::clear_card_type() {
  card_type_ = 0u;
  clear_has_card_type();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_info_play_rep::card_type() const {
  return card_type_;
}
inline void msg_zajinhua_game_info_play_rep::set_card_type(::google::protobuf::uint32 value) {
  set_has_card_type();
  card_type_ = value;
}

// optional uint32 game_status = 16;
inline bool msg_zajinhua_game_info_play_rep::has_game_status() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void msg_zajinhua_game_info_play_rep::set_has_game_status() {
  _has_bits_[0] |= 0x00002000u;
}
inline void msg_zajinhua_game_info_play_rep::clear_has_game_status() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void msg_zajinhua_game_info_play_rep::clear_game_status() {
  game_status_ = 0u;
  clear_has_game_status();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_info_play_rep::game_status() const {
  return game_status_;
}
inline void msg_zajinhua_game_info_play_rep::set_game_status(::google::protobuf::uint32 value) {
  set_has_game_status();
  game_status_ = value;
}

// -------------------------------------------------------------------

// msg_zajinhua_start_rep

// optional uint32 banker_user = 1;
inline bool msg_zajinhua_start_rep::has_banker_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_zajinhua_start_rep::set_has_banker_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_zajinhua_start_rep::clear_has_banker_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_zajinhua_start_rep::clear_banker_user() {
  banker_user_ = 0u;
  clear_has_banker_user();
}
inline ::google::protobuf::uint32 msg_zajinhua_start_rep::banker_user() const {
  return banker_user_;
}
inline void msg_zajinhua_start_rep::set_banker_user(::google::protobuf::uint32 value) {
  set_has_banker_user();
  banker_user_ = value;
}

// optional uint32 current_user = 2;
inline bool msg_zajinhua_start_rep::has_current_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_zajinhua_start_rep::set_has_current_user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_zajinhua_start_rep::clear_has_current_user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_zajinhua_start_rep::clear_current_user() {
  current_user_ = 0u;
  clear_has_current_user();
}
inline ::google::protobuf::uint32 msg_zajinhua_start_rep::current_user() const {
  return current_user_;
}
inline void msg_zajinhua_start_rep::set_current_user(::google::protobuf::uint32 value) {
  set_has_current_user();
  current_user_ = value;
}

// optional int64 user_max_score = 3;
inline bool msg_zajinhua_start_rep::has_user_max_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_zajinhua_start_rep::set_has_user_max_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_zajinhua_start_rep::clear_has_user_max_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_zajinhua_start_rep::clear_user_max_score() {
  user_max_score_ = GOOGLE_LONGLONG(0);
  clear_has_user_max_score();
}
inline ::google::protobuf::int64 msg_zajinhua_start_rep::user_max_score() const {
  return user_max_score_;
}
inline void msg_zajinhua_start_rep::set_user_max_score(::google::protobuf::int64 value) {
  set_has_user_max_score();
  user_max_score_ = value;
}

// repeated uint32 play_status = 4;
inline int msg_zajinhua_start_rep::play_status_size() const {
  return play_status_.size();
}
inline void msg_zajinhua_start_rep::clear_play_status() {
  play_status_.Clear();
}
inline ::google::protobuf::uint32 msg_zajinhua_start_rep::play_status(int index) const {
  return play_status_.Get(index);
}
inline void msg_zajinhua_start_rep::set_play_status(int index, ::google::protobuf::uint32 value) {
  play_status_.Set(index, value);
}
inline void msg_zajinhua_start_rep::add_play_status(::google::protobuf::uint32 value) {
  play_status_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_zajinhua_start_rep::play_status() const {
  return play_status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_zajinhua_start_rep::mutable_play_status() {
  return &play_status_;
}

// -------------------------------------------------------------------

// msg_zajinhua_addscore_req

// optional int64 add_score = 1;
inline bool msg_zajinhua_addscore_req::has_add_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_zajinhua_addscore_req::set_has_add_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_zajinhua_addscore_req::clear_has_add_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_zajinhua_addscore_req::clear_add_score() {
  add_score_ = GOOGLE_LONGLONG(0);
  clear_has_add_score();
}
inline ::google::protobuf::int64 msg_zajinhua_addscore_req::add_score() const {
  return add_score_;
}
inline void msg_zajinhua_addscore_req::set_add_score(::google::protobuf::int64 value) {
  set_has_add_score();
  add_score_ = value;
}

// optional uint32 is_allin = 2;
inline bool msg_zajinhua_addscore_req::has_is_allin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_zajinhua_addscore_req::set_has_is_allin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_zajinhua_addscore_req::clear_has_is_allin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_zajinhua_addscore_req::clear_is_allin() {
  is_allin_ = 0u;
  clear_has_is_allin();
}
inline ::google::protobuf::uint32 msg_zajinhua_addscore_req::is_allin() const {
  return is_allin_;
}
inline void msg_zajinhua_addscore_req::set_is_allin(::google::protobuf::uint32 value) {
  set_has_is_allin();
  is_allin_ = value;
}

// -------------------------------------------------------------------

// msg_zajinhua_addscore_rep

// optional uint32 current_user = 1;
inline bool msg_zajinhua_addscore_rep::has_current_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_zajinhua_addscore_rep::set_has_current_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_zajinhua_addscore_rep::clear_has_current_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_zajinhua_addscore_rep::clear_current_user() {
  current_user_ = 0u;
  clear_has_current_user();
}
inline ::google::protobuf::uint32 msg_zajinhua_addscore_rep::current_user() const {
  return current_user_;
}
inline void msg_zajinhua_addscore_rep::set_current_user(::google::protobuf::uint32 value) {
  set_has_current_user();
  current_user_ = value;
}

// optional uint32 add_score_user = 2;
inline bool msg_zajinhua_addscore_rep::has_add_score_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_zajinhua_addscore_rep::set_has_add_score_user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_zajinhua_addscore_rep::clear_has_add_score_user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_zajinhua_addscore_rep::clear_add_score_user() {
  add_score_user_ = 0u;
  clear_has_add_score_user();
}
inline ::google::protobuf::uint32 msg_zajinhua_addscore_rep::add_score_user() const {
  return add_score_user_;
}
inline void msg_zajinhua_addscore_rep::set_add_score_user(::google::protobuf::uint32 value) {
  set_has_add_score_user();
  add_score_user_ = value;
}

// optional uint32 compare_state = 3;
inline bool msg_zajinhua_addscore_rep::has_compare_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_zajinhua_addscore_rep::set_has_compare_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_zajinhua_addscore_rep::clear_has_compare_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_zajinhua_addscore_rep::clear_compare_state() {
  compare_state_ = 0u;
  clear_has_compare_state();
}
inline ::google::protobuf::uint32 msg_zajinhua_addscore_rep::compare_state() const {
  return compare_state_;
}
inline void msg_zajinhua_addscore_rep::set_compare_state(::google::protobuf::uint32 value) {
  set_has_compare_state();
  compare_state_ = value;
}

// optional int64 add_score_count = 4;
inline bool msg_zajinhua_addscore_rep::has_add_score_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_zajinhua_addscore_rep::set_has_add_score_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_zajinhua_addscore_rep::clear_has_add_score_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_zajinhua_addscore_rep::clear_add_score_count() {
  add_score_count_ = GOOGLE_LONGLONG(0);
  clear_has_add_score_count();
}
inline ::google::protobuf::int64 msg_zajinhua_addscore_rep::add_score_count() const {
  return add_score_count_;
}
inline void msg_zajinhua_addscore_rep::set_add_score_count(::google::protobuf::int64 value) {
  set_has_add_score_count();
  add_score_count_ = value;
}

// optional uint32 current_times = 5;
inline bool msg_zajinhua_addscore_rep::has_current_times() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msg_zajinhua_addscore_rep::set_has_current_times() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msg_zajinhua_addscore_rep::clear_has_current_times() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msg_zajinhua_addscore_rep::clear_current_times() {
  current_times_ = 0u;
  clear_has_current_times();
}
inline ::google::protobuf::uint32 msg_zajinhua_addscore_rep::current_times() const {
  return current_times_;
}
inline void msg_zajinhua_addscore_rep::set_current_times(::google::protobuf::uint32 value) {
  set_has_current_times();
  current_times_ = value;
}

// optional uint32 current_round = 6;
inline bool msg_zajinhua_addscore_rep::has_current_round() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msg_zajinhua_addscore_rep::set_has_current_round() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msg_zajinhua_addscore_rep::clear_has_current_round() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msg_zajinhua_addscore_rep::clear_current_round() {
  current_round_ = 0u;
  clear_has_current_round();
}
inline ::google::protobuf::uint32 msg_zajinhua_addscore_rep::current_round() const {
  return current_round_;
}
inline void msg_zajinhua_addscore_rep::set_current_round(::google::protobuf::uint32 value) {
  set_has_current_round();
  current_round_ = value;
}

// optional uint32 only_compare = 7;
inline bool msg_zajinhua_addscore_rep::has_only_compare() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void msg_zajinhua_addscore_rep::set_has_only_compare() {
  _has_bits_[0] |= 0x00000040u;
}
inline void msg_zajinhua_addscore_rep::clear_has_only_compare() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void msg_zajinhua_addscore_rep::clear_only_compare() {
  only_compare_ = 0u;
  clear_has_only_compare();
}
inline ::google::protobuf::uint32 msg_zajinhua_addscore_rep::only_compare() const {
  return only_compare_;
}
inline void msg_zajinhua_addscore_rep::set_only_compare(::google::protobuf::uint32 value) {
  set_has_only_compare();
  only_compare_ = value;
}

// optional uint32 is_allin = 8;
inline bool msg_zajinhua_addscore_rep::has_is_allin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void msg_zajinhua_addscore_rep::set_has_is_allin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void msg_zajinhua_addscore_rep::clear_has_is_allin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void msg_zajinhua_addscore_rep::clear_is_allin() {
  is_allin_ = 0u;
  clear_has_is_allin();
}
inline ::google::protobuf::uint32 msg_zajinhua_addscore_rep::is_allin() const {
  return is_allin_;
}
inline void msg_zajinhua_addscore_rep::set_is_allin(::google::protobuf::uint32 value) {
  set_has_is_allin();
  is_allin_ = value;
}

// -------------------------------------------------------------------

// msg_zajinhua_giveup_req

// optional uint32 giveup_reason = 1;
inline bool msg_zajinhua_giveup_req::has_giveup_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_zajinhua_giveup_req::set_has_giveup_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_zajinhua_giveup_req::clear_has_giveup_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_zajinhua_giveup_req::clear_giveup_reason() {
  giveup_reason_ = 0u;
  clear_has_giveup_reason();
}
inline ::google::protobuf::uint32 msg_zajinhua_giveup_req::giveup_reason() const {
  return giveup_reason_;
}
inline void msg_zajinhua_giveup_req::set_giveup_reason(::google::protobuf::uint32 value) {
  set_has_giveup_reason();
  giveup_reason_ = value;
}

// -------------------------------------------------------------------

// msg_zajinhua_giveup_rep

// optional uint32 giveup_user = 1;
inline bool msg_zajinhua_giveup_rep::has_giveup_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_zajinhua_giveup_rep::set_has_giveup_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_zajinhua_giveup_rep::clear_has_giveup_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_zajinhua_giveup_rep::clear_giveup_user() {
  giveup_user_ = 0u;
  clear_has_giveup_user();
}
inline ::google::protobuf::uint32 msg_zajinhua_giveup_rep::giveup_user() const {
  return giveup_user_;
}
inline void msg_zajinhua_giveup_rep::set_giveup_user(::google::protobuf::uint32 value) {
  set_has_giveup_user();
  giveup_user_ = value;
}

// -------------------------------------------------------------------

// msg_zajinhua_compare_card_req

// optional uint32 compare_user = 1;
inline bool msg_zajinhua_compare_card_req::has_compare_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_zajinhua_compare_card_req::set_has_compare_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_zajinhua_compare_card_req::clear_has_compare_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_zajinhua_compare_card_req::clear_compare_user() {
  compare_user_ = 0u;
  clear_has_compare_user();
}
inline ::google::protobuf::uint32 msg_zajinhua_compare_card_req::compare_user() const {
  return compare_user_;
}
inline void msg_zajinhua_compare_card_req::set_compare_user(::google::protobuf::uint32 value) {
  set_has_compare_user();
  compare_user_ = value;
}

// -------------------------------------------------------------------

// msg_zajinhua_compare_card_rep

// optional uint32 current_user = 1;
inline bool msg_zajinhua_compare_card_rep::has_current_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_zajinhua_compare_card_rep::set_has_current_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_zajinhua_compare_card_rep::clear_has_current_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_zajinhua_compare_card_rep::clear_current_user() {
  current_user_ = 0u;
  clear_has_current_user();
}
inline ::google::protobuf::uint32 msg_zajinhua_compare_card_rep::current_user() const {
  return current_user_;
}
inline void msg_zajinhua_compare_card_rep::set_current_user(::google::protobuf::uint32 value) {
  set_has_current_user();
  current_user_ = value;
}

// repeated uint32 compare_user = 2;
inline int msg_zajinhua_compare_card_rep::compare_user_size() const {
  return compare_user_.size();
}
inline void msg_zajinhua_compare_card_rep::clear_compare_user() {
  compare_user_.Clear();
}
inline ::google::protobuf::uint32 msg_zajinhua_compare_card_rep::compare_user(int index) const {
  return compare_user_.Get(index);
}
inline void msg_zajinhua_compare_card_rep::set_compare_user(int index, ::google::protobuf::uint32 value) {
  compare_user_.Set(index, value);
}
inline void msg_zajinhua_compare_card_rep::add_compare_user(::google::protobuf::uint32 value) {
  compare_user_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_zajinhua_compare_card_rep::compare_user() const {
  return compare_user_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_zajinhua_compare_card_rep::mutable_compare_user() {
  return &compare_user_;
}

// optional uint32 lost_user = 3;
inline bool msg_zajinhua_compare_card_rep::has_lost_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_zajinhua_compare_card_rep::set_has_lost_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_zajinhua_compare_card_rep::clear_has_lost_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_zajinhua_compare_card_rep::clear_lost_user() {
  lost_user_ = 0u;
  clear_has_lost_user();
}
inline ::google::protobuf::uint32 msg_zajinhua_compare_card_rep::lost_user() const {
  return lost_user_;
}
inline void msg_zajinhua_compare_card_rep::set_lost_user(::google::protobuf::uint32 value) {
  set_has_lost_user();
  lost_user_ = value;
}

// -------------------------------------------------------------------

// msg_zajinhua_look_card_req

// optional uint32 chairid = 1;
inline bool msg_zajinhua_look_card_req::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_zajinhua_look_card_req::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_zajinhua_look_card_req::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_zajinhua_look_card_req::clear_chairid() {
  chairid_ = 0u;
  clear_has_chairid();
}
inline ::google::protobuf::uint32 msg_zajinhua_look_card_req::chairid() const {
  return chairid_;
}
inline void msg_zajinhua_look_card_req::set_chairid(::google::protobuf::uint32 value) {
  set_has_chairid();
  chairid_ = value;
}

// -------------------------------------------------------------------

// msg_zajinhua_look_card_rep

// optional uint32 look_card_user = 1;
inline bool msg_zajinhua_look_card_rep::has_look_card_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_zajinhua_look_card_rep::set_has_look_card_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_zajinhua_look_card_rep::clear_has_look_card_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_zajinhua_look_card_rep::clear_look_card_user() {
  look_card_user_ = 0u;
  clear_has_look_card_user();
}
inline ::google::protobuf::uint32 msg_zajinhua_look_card_rep::look_card_user() const {
  return look_card_user_;
}
inline void msg_zajinhua_look_card_rep::set_look_card_user(::google::protobuf::uint32 value) {
  set_has_look_card_user();
  look_card_user_ = value;
}

// repeated uint32 card_data = 2;
inline int msg_zajinhua_look_card_rep::card_data_size() const {
  return card_data_.size();
}
inline void msg_zajinhua_look_card_rep::clear_card_data() {
  card_data_.Clear();
}
inline ::google::protobuf::uint32 msg_zajinhua_look_card_rep::card_data(int index) const {
  return card_data_.Get(index);
}
inline void msg_zajinhua_look_card_rep::set_card_data(int index, ::google::protobuf::uint32 value) {
  card_data_.Set(index, value);
}
inline void msg_zajinhua_look_card_rep::add_card_data(::google::protobuf::uint32 value) {
  card_data_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_zajinhua_look_card_rep::card_data() const {
  return card_data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_zajinhua_look_card_rep::mutable_card_data() {
  return &card_data_;
}

// optional uint32 card_type = 3;
inline bool msg_zajinhua_look_card_rep::has_card_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_zajinhua_look_card_rep::set_has_card_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_zajinhua_look_card_rep::clear_has_card_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_zajinhua_look_card_rep::clear_card_type() {
  card_type_ = 0u;
  clear_has_card_type();
}
inline ::google::protobuf::uint32 msg_zajinhua_look_card_rep::card_type() const {
  return card_type_;
}
inline void msg_zajinhua_look_card_rep::set_card_type(::google::protobuf::uint32 value) {
  set_has_card_type();
  card_type_ = value;
}

// -------------------------------------------------------------------

// msg_zajinhua_open_card_req

// -------------------------------------------------------------------

// msg_zajinhua_open_card

// optional uint32 winner = 1;
inline bool msg_zajinhua_open_card::has_winner() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_zajinhua_open_card::set_has_winner() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_zajinhua_open_card::clear_has_winner() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_zajinhua_open_card::clear_winner() {
  winner_ = 0u;
  clear_has_winner();
}
inline ::google::protobuf::uint32 msg_zajinhua_open_card::winner() const {
  return winner_;
}
inline void msg_zajinhua_open_card::set_winner(::google::protobuf::uint32 value) {
  set_has_winner();
  winner_ = value;
}

// -------------------------------------------------------------------

// msg_zajinhua_game_end_rep

// repeated int64 game_score = 1;
inline int msg_zajinhua_game_end_rep::game_score_size() const {
  return game_score_.size();
}
inline void msg_zajinhua_game_end_rep::clear_game_score() {
  game_score_.Clear();
}
inline ::google::protobuf::int64 msg_zajinhua_game_end_rep::game_score(int index) const {
  return game_score_.Get(index);
}
inline void msg_zajinhua_game_end_rep::set_game_score(int index, ::google::protobuf::int64 value) {
  game_score_.Set(index, value);
}
inline void msg_zajinhua_game_end_rep::add_game_score(::google::protobuf::int64 value) {
  game_score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
msg_zajinhua_game_end_rep::game_score() const {
  return game_score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
msg_zajinhua_game_end_rep::mutable_game_score() {
  return &game_score_;
}

// repeated .net.msg_cards card_data = 2;
inline int msg_zajinhua_game_end_rep::card_data_size() const {
  return card_data_.size();
}
inline void msg_zajinhua_game_end_rep::clear_card_data() {
  card_data_.Clear();
}
inline const ::net::msg_cards& msg_zajinhua_game_end_rep::card_data(int index) const {
  return card_data_.Get(index);
}
inline ::net::msg_cards* msg_zajinhua_game_end_rep::mutable_card_data(int index) {
  return card_data_.Mutable(index);
}
inline ::net::msg_cards* msg_zajinhua_game_end_rep::add_card_data() {
  return card_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::net::msg_cards >&
msg_zajinhua_game_end_rep::card_data() const {
  return card_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::net::msg_cards >*
msg_zajinhua_game_end_rep::mutable_card_data() {
  return &card_data_;
}

// repeated uint32 compare_user = 3;
inline int msg_zajinhua_game_end_rep::compare_user_size() const {
  return compare_user_.size();
}
inline void msg_zajinhua_game_end_rep::clear_compare_user() {
  compare_user_.Clear();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_end_rep::compare_user(int index) const {
  return compare_user_.Get(index);
}
inline void msg_zajinhua_game_end_rep::set_compare_user(int index, ::google::protobuf::uint32 value) {
  compare_user_.Set(index, value);
}
inline void msg_zajinhua_game_end_rep::add_compare_user(::google::protobuf::uint32 value) {
  compare_user_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_zajinhua_game_end_rep::compare_user() const {
  return compare_user_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_zajinhua_game_end_rep::mutable_compare_user() {
  return &compare_user_;
}

// optional uint32 end_state = 4;
inline bool msg_zajinhua_game_end_rep::has_end_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_zajinhua_game_end_rep::set_has_end_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_zajinhua_game_end_rep::clear_has_end_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_zajinhua_game_end_rep::clear_end_state() {
  end_state_ = 0u;
  clear_has_end_state();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_end_rep::end_state() const {
  return end_state_;
}
inline void msg_zajinhua_game_end_rep::set_end_state(::google::protobuf::uint32 value) {
  set_has_end_state();
  end_state_ = value;
}

// repeated int64 special_score = 5;
inline int msg_zajinhua_game_end_rep::special_score_size() const {
  return special_score_.size();
}
inline void msg_zajinhua_game_end_rep::clear_special_score() {
  special_score_.Clear();
}
inline ::google::protobuf::int64 msg_zajinhua_game_end_rep::special_score(int index) const {
  return special_score_.Get(index);
}
inline void msg_zajinhua_game_end_rep::set_special_score(int index, ::google::protobuf::int64 value) {
  special_score_.Set(index, value);
}
inline void msg_zajinhua_game_end_rep::add_special_score(::google::protobuf::int64 value) {
  special_score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
msg_zajinhua_game_end_rep::special_score() const {
  return special_score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
msg_zajinhua_game_end_rep::mutable_special_score() {
  return &special_score_;
}

// repeated uint32 card_types = 6;
inline int msg_zajinhua_game_end_rep::card_types_size() const {
  return card_types_.size();
}
inline void msg_zajinhua_game_end_rep::clear_card_types() {
  card_types_.Clear();
}
inline ::google::protobuf::uint32 msg_zajinhua_game_end_rep::card_types(int index) const {
  return card_types_.Get(index);
}
inline void msg_zajinhua_game_end_rep::set_card_types(int index, ::google::protobuf::uint32 value) {
  card_types_.Set(index, value);
}
inline void msg_zajinhua_game_end_rep::add_card_types(::google::protobuf::uint32 value) {
  card_types_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_zajinhua_game_end_rep::card_types() const {
  return card_types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_zajinhua_game_end_rep::mutable_card_types() {
  return &card_types_;
}

// -------------------------------------------------------------------

// msg_zajinhua_show_card_req

// -------------------------------------------------------------------

// msg_zajinhua_show_card_rep

// optional uint32 show_chairid = 1;
inline bool msg_zajinhua_show_card_rep::has_show_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_zajinhua_show_card_rep::set_has_show_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_zajinhua_show_card_rep::clear_has_show_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_zajinhua_show_card_rep::clear_show_chairid() {
  show_chairid_ = 0u;
  clear_has_show_chairid();
}
inline ::google::protobuf::uint32 msg_zajinhua_show_card_rep::show_chairid() const {
  return show_chairid_;
}
inline void msg_zajinhua_show_card_rep::set_show_chairid(::google::protobuf::uint32 value) {
  set_has_show_chairid();
  show_chairid_ = value;
}

// repeated uint32 cards = 2;
inline int msg_zajinhua_show_card_rep::cards_size() const {
  return cards_.size();
}
inline void msg_zajinhua_show_card_rep::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::uint32 msg_zajinhua_show_card_rep::cards(int index) const {
  return cards_.Get(index);
}
inline void msg_zajinhua_show_card_rep::set_cards(int index, ::google::protobuf::uint32 value) {
  cards_.Set(index, value);
}
inline void msg_zajinhua_show_card_rep::add_cards(::google::protobuf::uint32 value) {
  cards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
msg_zajinhua_show_card_rep::cards() const {
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
msg_zajinhua_show_card_rep::mutable_cards() {
  return &cards_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace net

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_zajinhua_5flogic_5fmsg_2eproto__INCLUDED
